{
    "componentChunkName": "component---node-modules-gatsby-theme-code-notes-src-templates-note-js",
    "path": "/typescript",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"TypeScript\",\n  \"emoji\": \"üìù\",\n  \"tags\": [\"js\", \"typescript\"],\n  \"link\": null,\n  \"created\": \"2021-07-08T15:49:56.000Z\",\n  \"modified\": \"2022-08-12T15:49:56.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#migrate-an-entire-project-to-typescript\"\n  }, \"Migrate an entire project to TypeScript\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#create-a-condition-based-subset-types\"\n  }, \"Create a condition-based subset types\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#an-introduction-to-type-programming-in-typescript\"\n  }, \"An Introduction To Type Programming In TypeScript\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#equality-comparisons-and-conditional-branching\"\n  }, \"Equality comparisons and conditional branching\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#how-to-use-type-guards-in-typescript\"\n  }, \"How to use type guards in TypeScript\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#functions\"\n  }, \"Functions\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#typescript-utility-types\"\n  }, \"Typescript utility types\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#react-with-typescript-best-practices\"\n  }, \"React with TypeScript: Best Practices\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#making-eslint-happy-in-mixed-typescriptjavascript-projects\"\n  }, \"Making ESLint Happy in Mixed TypeScript/Javascript Projects\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#exploring-advanced-compiler-options-in-typescript\"\n  }, \"Exploring advanced compiler options in TypeScript\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#tools\"\n  }, \"Tools\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#tutorials\"\n  }, \"Tutorials\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#type-challenges\"\n  }, \"Type Challenges\"))), mdx(\"h2\", {\n    \"id\": \"migrate-an-entire-project-to-typescript\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"https://github.com/airbnb/ts-migrate/tree/master/packages/ts-migrate#usage\"\n  }, \"Migrate an entire project to TypeScript\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"npx -p ts-migrate -c \\\"ts-migrate-full .\\\"\\n\")), mdx(\"h2\", {\n    \"id\": \"create-a-condition-based-subset-types\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"https://www.piotrl.net/typescript-condition-subset-types/\"\n  }, \"Create a condition-based subset types\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"type SubType<Base, Condition> = Pick<\\n  Base,\\n  {\\n    [Key in keyof Base]: Base[Key] extends Condition ? Key : never;\\n  }[keyof Base]\\n>;\\n// or\\ntype FilterFlags<Base, Condition> = {\\n  [Key in keyof Base]: Base[Key] extends Condition ? Key : never;\\n};\\n\\ntype AllowedNames<Base, Condition> = FilterFlags<Base, Condition>[keyof Base];\\n\\ntype SubType<Base, Condition> = Pick<Base, AllowedNames<Base, Condition>>;\\n\\n// usage\\ntype JsonPrimitive = SubType<Person, number | string>;\\ntype JsonPrimitive = {\\n  id: number;\\n  name: string;\\n  lastName: string;\\n};\\n\")), mdx(\"h2\", {\n    \"id\": \"an-introduction-to-type-programming-in-typescript\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"https://www.zhenghao.io/posts/type-programming#equality-comparisons-and-conditional-branching\"\n  }, \"An Introduction To Type Programming In TypeScript\")), mdx(\"h2\", {\n    \"id\": \"equality-comparisons-and-conditional-branching\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"https://www.zhenghao.io/posts/type-programming#equality-comparisons-and-conditional-branching\"\n  }, \"Equality comparisons and conditional branching\")), mdx(\"p\", null, \"In the type language, on the other hand, we use the extends keyword for \\\"equality check\\\", and the conditional (ternary) operator ? for conditional branching too as in:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"TypeC = TypeA extends TypeB ? TrueExpression : FalseExpression\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"extends\"), \" keyword is versatile. It can also apply constraints to generic type parameters. For example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"function getUserName<T extends { name: string }>(user: T) {\\n  return user.name;\\n}\\n\")), mdx(\"p\", null, \"By adding the generic constraints, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<T extends {name: string}>\"), \" we ensure the argument our function takes always consist of a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"name\"), \" property of the type \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"string\"), \".\"), mdx(\"h2\", {\n    \"id\": \"how-to-use-type-guards-in-typescript\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"https://blog.logrocket.com/how-to-use-type-guards-typescript/\"\n  }, \"How to use type guards in TypeScript\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"in\"), \" type guard checks if an object has a particular property,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.typescriptlang.org/docs/handbook/2/narrowing.html#using-type-predicates\"\n  }, \"Custom type guard with predicate\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"function isFish(pet: Fish | Bird): pet is Fish {\\n  return (pet as Fish).swim !== undefined;\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"functions\"\n  }, \"Functions\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"function fn(a, b = \\\"world\\\") {\\n  return [a, b];\\n}\\nconst result = fn(\\\"hello\\\"); // [\\\"hello\\\", \\\"world\\\"]\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"type Fn<A extends string, B extends string = \\\"world\\\"> = [A, B];\\n//   \\u2191    \\u2191           \\u2191                          \\u2191              \\u2191\\n// name parameter parameter type          default value   function body/return statement\\n\\ntype Result = Fn<\\\"hello\\\">; // [\\\"hello\\\", \\\"world\\\"]\\n\")), mdx(\"h2\", {\n    \"id\": \"typescript-utility-types\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"https://www.typescriptlang.org/docs/handbook/utility-types.html\"\n  }, \"Typescript utility types\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"keyof\"), \": creates a union type consisting of the property names of the type you pass\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Partial\"), \": will return a new type with all of the props set to optional.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Pick\"), \" creates a new type by specifying which properties you would like to copy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Omit\"), \" will copy all the props, except for the ones you passed:\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Exclude\"), \" removes a constituent of that union.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Record\"), \":constructs an object type whose property keys are Keys and whose property values are Type\")), mdx(\"h2\", {\n    \"id\": \"react-with-typescript-best-practices\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"https://www.sitepoint.com/react-with-typescript-best-practices/\"\n  }, \"React with TypeScript: Best Practices\")), mdx(\"img\", {\n    \"src\": \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fi.imgur.com%2FoeaMGnj.jpg&f=1&nofb=1\",\n    \"alt\": \"React with TypeScript\"\n  }), mdx(\"p\", null, \"Best practices for using Typescript with React\"), mdx(\"h2\", {\n    \"id\": \"making-eslint-happy-in-mixed-typescriptjavascript-projects\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"https://hashnode.blainegarrett.com/making-eslint-happy-in-mixed-typescriptjavascript-projects-ck5lge2v204cgqks1sk4nlp85\"\n  }, \"Making ESLint Happy in Mixed TypeScript/Javascript Projects\")), mdx(\"p\", null, \"Add this property to your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".eslintrc\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"overrides: [\\n  {\\n    extends: [\\\"plugin:@typescript-eslint/recommended\\\"],\\n    files: [\\\"**/*.ts?(x)\\\"],\\n    plugins: [\\\"@typescript-eslint\\\"],\\n  },\\n];\\n\")), mdx(\"h2\", {\n    \"id\": \"exploring-advanced-compiler-options-in-typescript\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"https://blog.logrocket.com/exploring-advanced-compiler-options-typescript/\"\n  }, \"Exploring advanced compiler options in TypeScript\")), mdx(\"p\", null, \"This article will cover the following options:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nested tsconfig.json files\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"strictPropertyInitialization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"noImplicitThis\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"noImplicitReturns\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"strictNullChecks\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"\\u251C\\u2500\\u2500 dist\\n\\u2514\\u2500\\u2500 src\\n    \\u251C\\u2500\\u2500 tsconfig.json\\n    \\u251C\\u2500\\u2500 backend\\n    \\u2502   \\u251C\\u2500\\u2500 index.ts\\n    \\u2502   \\u2514\\u2500\\u2500 tsconfig.json\\n    \\u2514\\u2500\\u2500 frontend\\n        \\u251C\\u2500\\u2500 index.ts\\n        \\u2514\\u2500\\u2500 tsconfig.json\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"compilerOptions\\\": {\\n    \\\"target\\\": \\\"es5\\\",\\n    \\\"module\\\": \\\"commonjs\\\",\\n    \\\"rootDir\\\": \\\".\\\",\\n    \\\"outDir\\\": \\\"../dist/\\\"\\n  },\\n  \\\"files\\\": [],\\n  \\\"references\\\": [{ \\\"path\\\": \\\"./backend\\\" }, { \\\"path\\\": \\\"./frontend\\\" }]\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"tools\"\n  }, \"Tools\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://marketplace.visualstudio.com/items?itemName=WallabyJs.quokka-vscode\"\n  }, \"Quokka.js\"), \": a developer productivity tool for rapid JavaScript / TypeScript prototyping.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/airbnb/ts-migrate\"\n  }, \"ts-migrate\"), \": A tool to help migrate JavaScript code quickly and conveniently to TypeScript\")), mdx(\"h2\", {\n    \"id\": \"tutorials\"\n  }, \"Tutorials\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://dev.to/kardell/typesafe-usereducer-with-react-context-53c3?ck_subscriber_id=1238258824\"\n  }, \"Typesafe useReducer with React Context\"))), mdx(\"h2\", {\n    \"id\": \"type-challenges\"\n  }, \"Type Challenges\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pick\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"type MyPick<T, K extends keyof T> = {\\n  [key in K]: T[key];\\n};\\n\\n// \\u274C bad one\\n// Can't determine the return value type\\nfunction getValue(o:object, key: string){\\n  return o[key]\\n}\\n// \\u2705 Constrain the input key\\nfunction getValue<T extends Object,K extends keyof T>(o: T,key: K): T[K] {\\n  return o[key]\\n}\\nconst obj1 = { name: 'test'\\uFF0C age: 18}\\n// If the second argument is not an argument in obj1, an error will be reported\\nconst values = getValue(obj1, 'name')\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"TypeScript","tags":["js","typescript"],"emoji":"üìù","link":null,"modified":"August 12, 2022","modifiedTimestamp":"2022-08-12T15:49:56.000Z"},"references":[],"fields":{"slug":"/typescript"},"tableOfContents":{"items":[{"url":"#migrate-an-entire-project-to-typescript","title":"Migrate an entire project to TypeScript"},{"url":"#create-a-condition-based-subset-types","title":"Create a condition-based subset types"},{"url":"#an-introduction-to-type-programming-in-typescript","title":"An Introduction To Type Programming In TypeScript"},{"url":"#equality-comparisons-and-conditional-branching","title":"Equality comparisons and conditional branching"},{"url":"#how-to-use-type-guards-in-typescript","title":"How to use type guards in TypeScript"},{"url":"#functions","title":"Functions"},{"url":"#typescript-utility-types","title":"Typescript utility types"},{"url":"#react-with-typescript-best-practices","title":"React with TypeScript: Best Practices"},{"url":"#making-eslint-happy-in-mixed-typescriptjavascript-projects","title":"Making ESLint Happy in Mixed TypeScript/Javascript Projects"},{"url":"#exploring-advanced-compiler-options-in-typescript","title":"Exploring advanced compiler options in TypeScript"},{"url":"#tools","title":"Tools"},{"url":"#tutorials","title":"Tutorials"},{"url":"#type-challenges","title":"Type Challenges"}]},"parent":{"relativePath":"typescript.md"}}},"pageContext":{"id":"a14fa149-8800-5a1a-984d-2c61b8a4eff6","previous":{"id":"5149174b-30d1-5d7b-9833-0685492c7fb7","frontmatter":{"title":"Turn Self-Doubt into an Opportunity to Improve","tags":["management","personal-growth"]},"fields":{"slug":"/turn_self_doubt_into_an_opportunity_to_improve"}},"next":{"id":"88900308-6b44-5efc-a0d5-78294aa5f0e4","frontmatter":{"title":"Turn Rejection into a Learning Opportunity","tags":["management","personal-growth"]},"fields":{"slug":"/turn_rejection_into_a_learning_opportunity"}},"hasUntagged":true,"basePath":"/","tags":[{"tag":"Archived","totalCount":3,"slug":"/archived","path":"/tag/archived"},{"tag":"Ethereum","totalCount":3,"slug":"/ethereum","path":"/tag/ethereum"},{"tag":"NFT","totalCount":1,"slug":"/nft","path":"/tag/nft"},{"tag":"UI/UX","totalCount":1,"slug":"/uiux","path":"/tag/uiux"},{"tag":"academic","totalCount":2,"slug":"/academic","path":"/tag/academic"},{"tag":"ai","totalCount":4,"slug":"/ai","path":"/tag/ai"},{"tag":"algorithm","totalCount":13,"slug":"/algorithm","path":"/tag/algorithm"},{"tag":"analysis","totalCount":3,"slug":"/analysis","path":"/tag/analysis"},{"tag":"api","totalCount":5,"slug":"/api","path":"/tag/api"},{"tag":"apollo","totalCount":1,"slug":"/apollo","path":"/tag/apollo"},{"tag":"architecture","totalCount":2,"slug":"/architecture","path":"/tag/architecture"},{"tag":"asciidoc","totalCount":3,"slug":"/asciidoc","path":"/tag/asciidoc"},{"tag":"audio","totalCount":1,"slug":"/audio","path":"/tag/audio"},{"tag":"automation","totalCount":1,"slug":"/automation","path":"/tag/automation"},{"tag":"aws","totalCount":9,"slug":"/aws","path":"/tag/aws"},{"tag":"bash","totalCount":2,"slug":"/bash","path":"/tag/bash"},{"tag":"basketball","totalCount":2,"slug":"/basketball","path":"/tag/basketball"},{"tag":"best-practices","totalCount":3,"slug":"/best-practices","path":"/tag/best-practices"},{"tag":"big data","totalCount":3,"slug":"/big-data","path":"/tag/big-data"},{"tag":"blockchain","totalCount":15,"slug":"/blockchain","path":"/tag/blockchain"},{"tag":"book","totalCount":2,"slug":"/book","path":"/tag/book"},{"tag":"bst","totalCount":1,"slug":"/bst","path":"/tag/bst"},{"tag":"career","totalCount":2,"slug":"/career","path":"/tag/career"},{"tag":"cell","totalCount":1,"slug":"/cell","path":"/tag/cell"},{"tag":"chart","totalCount":1,"slug":"/chart","path":"/tag/chart"},{"tag":"cheatsheet","totalCount":2,"slug":"/cheatsheet","path":"/tag/cheatsheet"},{"tag":"chrome","totalCount":1,"slug":"/chrome","path":"/tag/chrome"},{"tag":"cli","totalCount":11,"slug":"/cli","path":"/tag/cli"},{"tag":"cloud","totalCount":1,"slug":"/cloud","path":"/tag/cloud"},{"tag":"code review","totalCount":1,"slug":"/code-review","path":"/tag/code-review"},{"tag":"code-review","totalCount":1,"slug":"/code-review","path":"/tag/code-review"},{"tag":"communication","totalCount":4,"slug":"/communication","path":"/tag/communication"},{"tag":"contact tracking","totalCount":1,"slug":"/contact-tracking","path":"/tag/contact-tracking"},{"tag":"container","totalCount":1,"slug":"/container","path":"/tag/container"},{"tag":"converter","totalCount":1,"slug":"/converter","path":"/tag/converter"},{"tag":"covid19","totalCount":1,"slug":"/covid19","path":"/tag/covid19"},{"tag":"crypto","totalCount":1,"slug":"/crypto","path":"/tag/crypto"},{"tag":"cryptography","totalCount":1,"slug":"/cryptography","path":"/tag/cryptography"},{"tag":"csv","totalCount":1,"slug":"/csv","path":"/tag/csv"},{"tag":"data","totalCount":1,"slug":"/data","path":"/tag/data"},{"tag":"data science","totalCount":1,"slug":"/data-science","path":"/tag/data-science"},{"tag":"database","totalCount":11,"slug":"/database","path":"/tag/database"},{"tag":"design","totalCount":3,"slug":"/design","path":"/tag/design"},{"tag":"dev","totalCount":1,"slug":"/dev","path":"/tag/dev"},{"tag":"develop","totalCount":1,"slug":"/develop","path":"/tag/develop"},{"tag":"development","totalCount":1,"slug":"/development","path":"/tag/development"},{"tag":"devops","totalCount":1,"slug":"/devops","path":"/tag/devops"},{"tag":"discipline","totalCount":1,"slug":"/discipline","path":"/tag/discipline"},{"tag":"distributed","totalCount":1,"slug":"/distributed","path":"/tag/distributed"},{"tag":"docker","totalCount":5,"slug":"/docker","path":"/tag/docker"},{"tag":"docx","totalCount":1,"slug":"/docx","path":"/tag/docx"},{"tag":"dog","totalCount":1,"slug":"/dog","path":"/tag/dog"},{"tag":"duckdb","totalCount":1,"slug":"/duckdb","path":"/tag/duckdb"},{"tag":"dynamodb","totalCount":2,"slug":"/dynamodb","path":"/tag/dynamodb"},{"tag":"edr","totalCount":1,"slug":"/edr","path":"/tag/edr"},{"tag":"education","totalCount":1,"slug":"/education","path":"/tag/education"},{"tag":"efficiency","totalCount":1,"slug":"/efficiency","path":"/tag/efficiency"},{"tag":"emergency","totalCount":1,"slug":"/emergency","path":"/tag/emergency"},{"tag":"engineering","totalCount":1,"slug":"/engineering","path":"/tag/engineering"},{"tag":"error-handling","totalCount":1,"slug":"/error-handling","path":"/tag/error-handling"},{"tag":"eslint","totalCount":1,"slug":"/eslint","path":"/tag/eslint"},{"tag":"ethereum","totalCount":2,"slug":"/ethereum","path":"/tag/ethereum"},{"tag":"experience","totalCount":1,"slug":"/experience","path":"/tag/experience"},{"tag":"functional","totalCount":1,"slug":"/functional","path":"/tag/functional"},{"tag":"game","totalCount":1,"slug":"/game","path":"/tag/game"},{"tag":"gis","totalCount":27,"slug":"/gis","path":"/tag/gis"},{"tag":"git","totalCount":5,"slug":"/git","path":"/tag/git"},{"tag":"github","totalCount":4,"slug":"/github","path":"/tag/github"},{"tag":"google","totalCount":3,"slug":"/google","path":"/tag/google"},{"tag":"graphql","totalCount":4,"slug":"/graphql","path":"/tag/graphql"},{"tag":"handbook","totalCount":1,"slug":"/handbook","path":"/tag/handbook"},{"tag":"hash","totalCount":1,"slug":"/hash","path":"/tag/hash"},{"tag":"hci","totalCount":1,"slug":"/hci","path":"/tag/hci"},{"tag":"health","totalCount":1,"slug":"/health","path":"/tag/health"},{"tag":"image","totalCount":1,"slug":"/image","path":"/tag/image"},{"tag":"immunotherapies","totalCount":1,"slug":"/immunotherapies","path":"/tag/immunotherapies"},{"tag":"infrastructure","totalCount":1,"slug":"/infrastructure","path":"/tag/infrastructure"},{"tag":"insights","totalCount":1,"slug":"/insights","path":"/tag/insights"},{"tag":"interface","totalCount":1,"slug":"/interface","path":"/tag/interface"},{"tag":"interoperability","totalCount":2,"slug":"/interoperability","path":"/tag/interoperability"},{"tag":"interview","totalCount":3,"slug":"/interview","path":"/tag/interview"},{"tag":"investment","totalCount":1,"slug":"/investment","path":"/tag/investment"},{"tag":"iot","totalCount":12,"slug":"/iot","path":"/tag/iot"},{"tag":"javascript","totalCount":19,"slug":"/javascript","path":"/tag/javascript"},{"tag":"js","totalCount":13,"slug":"/js","path":"/tag/js"},{"tag":"json","totalCount":1,"slug":"/json","path":"/tag/json"},{"tag":"jupyter","totalCount":2,"slug":"/jupyter","path":"/tag/jupyter"},{"tag":"kubernetes","totalCount":1,"slug":"/kubernetes","path":"/tag/kubernetes"},{"tag":"laws","totalCount":1,"slug":"/laws","path":"/tag/laws"},{"tag":"leadership","totalCount":1,"slug":"/leadership","path":"/tag/leadership"},{"tag":"leetcode","totalCount":8,"slug":"/leetcode","path":"/tag/leetcode"},{"tag":"life","totalCount":1,"slug":"/life","path":"/tag/life"},{"tag":"linear algebra","totalCount":1,"slug":"/linear-algebra","path":"/tag/linear-algebra"},{"tag":"linux","totalCount":1,"slug":"/linux","path":"/tag/linux"},{"tag":"log","totalCount":1,"slug":"/log","path":"/tag/log"},{"tag":"luxon","totalCount":1,"slug":"/luxon","path":"/tag/luxon"},{"tag":"machine learning","totalCount":2,"slug":"/machine-learning","path":"/tag/machine-learning"},{"tag":"macos","totalCount":5,"slug":"/macos","path":"/tag/macos"},{"tag":"management","totalCount":193,"slug":"/management","path":"/tag/management"},{"tag":"mapbox","totalCount":1,"slug":"/mapbox","path":"/tag/mapbox"},{"tag":"markdown","totalCount":1,"slug":"/markdown","path":"/tag/markdown"},{"tag":"math","totalCount":1,"slug":"/math","path":"/tag/math"},{"tag":"methodology","totalCount":1,"slug":"/methodology","path":"/tag/methodology"},{"tag":"microservices","totalCount":2,"slug":"/microservices","path":"/tag/microservices"},{"tag":"mobile","totalCount":1,"slug":"/mobile","path":"/tag/mobile"},{"tag":"models","totalCount":1,"slug":"/models","path":"/tag/models"},{"tag":"moment","totalCount":1,"slug":"/moment","path":"/tag/moment"},{"tag":"mqtt","totalCount":2,"slug":"/mqtt","path":"/tag/mqtt"},{"tag":"negotiation","totalCount":1,"slug":"/negotiation","path":"/tag/negotiation"},{"tag":"node","totalCount":5,"slug":"/node","path":"/tag/node"},{"tag":"nodejs","totalCount":3,"slug":"/nodejs","path":"/tag/nodejs"},{"tag":"note","totalCount":23,"slug":"/note","path":"/tag/note"},{"tag":"npm","totalCount":1,"slug":"/npm","path":"/tag/npm"},{"tag":"oauth","totalCount":1,"slug":"/oauth","path":"/tag/oauth"},{"tag":"object detection","totalCount":2,"slug":"/object-detection","path":"/tag/object-detection"},{"tag":"odata","totalCount":1,"slug":"/odata","path":"/tag/odata"},{"tag":"ogc","totalCount":9,"slug":"/ogc","path":"/tag/ogc"},{"tag":"openapi","totalCount":1,"slug":"/openapi","path":"/tag/openapi"},{"tag":"operators","totalCount":1,"slug":"/operators","path":"/tag/operators"},{"tag":"orchestrator","totalCount":1,"slug":"/orchestrator","path":"/tag/orchestrator"},{"tag":"pandoc","totalCount":2,"slug":"/pandoc","path":"/tag/pandoc"},{"tag":"parent","totalCount":1,"slug":"/parent","path":"/tag/parent"},{"tag":"patterns","totalCount":1,"slug":"/patterns","path":"/tag/patterns"},{"tag":"performance","totalCount":2,"slug":"/performance","path":"/tag/performance"},{"tag":"personal-growth","totalCount":82,"slug":"/personal-growth","path":"/tag/personal-growth"},{"tag":"pet","totalCount":1,"slug":"/pet","path":"/tag/pet"},{"tag":"philosophy","totalCount":1,"slug":"/philosophy","path":"/tag/philosophy"},{"tag":"pipeline","totalCount":1,"slug":"/pipeline","path":"/tag/pipeline"},{"tag":"pipenv","totalCount":1,"slug":"/pipenv","path":"/tag/pipenv"},{"tag":"pm2","totalCount":1,"slug":"/pm2","path":"/tag/pm2"},{"tag":"point free","totalCount":1,"slug":"/point-free","path":"/tag/point-free"},{"tag":"postgresql","totalCount":3,"slug":"/postgresql","path":"/tag/postgresql"},{"tag":"presentation","totalCount":2,"slug":"/presentation","path":"/tag/presentation"},{"tag":"principles","totalCount":1,"slug":"/principles","path":"/tag/principles"},{"tag":"privacy","totalCount":1,"slug":"/privacy","path":"/tag/privacy"},{"tag":"problem solving","totalCount":1,"slug":"/problem-solving","path":"/tag/problem-solving"},{"tag":"program","totalCount":2,"slug":"/program","path":"/tag/program"},{"tag":"programming","totalCount":5,"slug":"/programming","path":"/tag/programming"},{"tag":"provenance","totalCount":1,"slug":"/provenance","path":"/tag/provenance"},{"tag":"psychology","totalCount":3,"slug":"/psychology","path":"/tag/psychology"},{"tag":"python","totalCount":7,"slug":"/python","path":"/tag/python"},{"tag":"react","totalCount":7,"slug":"/react","path":"/tag/react"},{"tag":"reading","totalCount":1,"slug":"/reading","path":"/tag/reading"},{"tag":"reasoning","totalCount":1,"slug":"/reasoning","path":"/tag/reasoning"},{"tag":"regex","totalCount":1,"slug":"/regex","path":"/tag/regex"},{"tag":"relationship","totalCount":1,"slug":"/relationship","path":"/tag/relationship"},{"tag":"remote","totalCount":1,"slug":"/remote","path":"/tag/remote"},{"tag":"remote-work","totalCount":1,"slug":"/remote-work","path":"/tag/remote-work"},{"tag":"research","totalCount":7,"slug":"/research","path":"/tag/research"},{"tag":"resources","totalCount":1,"slug":"/resources","path":"/tag/resources"},{"tag":"ruby","totalCount":1,"slug":"/ruby","path":"/tag/ruby"},{"tag":"rxjs","totalCount":1,"slug":"/rxjs","path":"/tag/rxjs"},{"tag":"scalable","totalCount":1,"slug":"/scalable","path":"/tag/scalable"},{"tag":"scraping","totalCount":1,"slug":"/scraping","path":"/tag/scraping"},{"tag":"security","totalCount":3,"slug":"/security","path":"/tag/security"},{"tag":"sensorThings API","totalCount":1,"slug":"/sensor-things-api","path":"/tag/sensor-things-api"},{"tag":"serverless","totalCount":1,"slug":"/serverless","path":"/tag/serverless"},{"tag":"sh","totalCount":1,"slug":"/sh","path":"/tag/sh"},{"tag":"shell","totalCount":6,"slug":"/shell","path":"/tag/shell"},{"tag":"spatial","totalCount":2,"slug":"/spatial","path":"/tag/spatial"},{"tag":"sql","totalCount":5,"slug":"/sql","path":"/tag/sql"},{"tag":"sta","totalCount":5,"slug":"/sta","path":"/tag/sta"},{"tag":"startup","totalCount":1,"slug":"/startup","path":"/tag/startup"},{"tag":"step functions","totalCount":1,"slug":"/step-functions","path":"/tag/step-functions"},{"tag":"stock","totalCount":1,"slug":"/stock","path":"/tag/stock"},{"tag":"structures","totalCount":1,"slug":"/structures","path":"/tag/structures"},{"tag":"style","totalCount":1,"slug":"/style","path":"/tag/style"},{"tag":"swe","totalCount":1,"slug":"/swe","path":"/tag/swe"},{"tag":"table","totalCount":1,"slug":"/table","path":"/tag/table"},{"tag":"team","totalCount":2,"slug":"/team","path":"/tag/team"},{"tag":"team-building","totalCount":1,"slug":"/team-building","path":"/tag/team-building"},{"tag":"terraform","totalCount":1,"slug":"/terraform","path":"/tag/terraform"},{"tag":"test","totalCount":2,"slug":"/test","path":"/tag/test"},{"tag":"theories","totalCount":1,"slug":"/theories","path":"/tag/theories"},{"tag":"thinking","totalCount":2,"slug":"/thinking","path":"/tag/thinking"},{"tag":"time","totalCount":3,"slug":"/time","path":"/tag/time"},{"tag":"tips","totalCount":2,"slug":"/tips","path":"/tag/tips"},{"tag":"tools","totalCount":4,"slug":"/tools","path":"/tag/tools"},{"tag":"tree","totalCount":3,"slug":"/tree","path":"/tag/tree"},{"tag":"typescript","totalCount":1,"slug":"/typescript","path":"/tag/typescript"},{"tag":"ubuntu","totalCount":1,"slug":"/ubuntu","path":"/tag/ubuntu"},{"tag":"ui","totalCount":2,"slug":"/ui","path":"/tag/ui"},{"tag":"unix","totalCount":1,"slug":"/unix","path":"/tag/unix"},{"tag":"vaccine","totalCount":1,"slug":"/vaccine","path":"/tag/vaccine"},{"tag":"video","totalCount":1,"slug":"/video","path":"/tag/video"},{"tag":"vscode","totalCount":1,"slug":"/vscode","path":"/tag/vscode"},{"tag":"web","totalCount":13,"slug":"/web","path":"/tag/web"},{"tag":"wine","totalCount":1,"slug":"/wine","path":"/tag/wine"},{"tag":"wkt","totalCount":1,"slug":"/wkt","path":"/tag/wkt"},{"tag":"writing","totalCount":15,"slug":"/writing","path":"/tag/writing"},{"tag":"xml","totalCount":1,"slug":"/xml","path":"/tag/xml"},{"tag":"yarn","totalCount":1,"slug":"/yarn","path":"/tag/yarn"},{"tag":"yolo","totalCount":2,"slug":"/yolo","path":"/tag/yolo"},{"tag":"zsh","totalCount":1,"slug":"/zsh","path":"/tag/zsh"}]}},
    "staticQueryHashes": ["1308211557","2744905544","467212769"]}