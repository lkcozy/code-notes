{
    "componentChunkName": "component---node-modules-gatsby-theme-code-notes-src-templates-note-js",
    "path": "/git",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Git-Version control system\",\n  \"emoji\": \"💡\",\n  \"tags\": [\"git\", \"cheatsheet\"],\n  \"created\": \"2020-06-24T07:06:39.000Z\",\n  \"modified\": \"2023-05-19T20:08:26.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#flight-rules-for-git\"\n  }, \"Flight rules for Git\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#tips\"\n  }, \"Tips\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#tools\"\n  }, \"Tools\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#misc\"\n  }, \"Misc\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#check-git-config\"\n  }, \"Check Git config\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#change-git-remote-url\"\n  }, \"Change Git Remote URL\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#undoing-mistakes\"\n  }, \"Undoing Mistakes\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#rebase\"\n  }, \"Rebase\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#recover-from-git-reset---hard\"\n  }, \"Recover from git reset --hard\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#count-all-tracked-files-in-a-git-respository\"\n  }, \"Count all tracked files in a git respository\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#discard-user-email-xxxx-related-commits-after-the-specific-commit\"\n  }, \"Discard user email \\\"xxxx\\\" related commits after the specific commit\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#checkout-filesfolders-from-a-specific-branch\"\n  }, \"Checkout files/folders from a specific branch\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#branches\"\n  }, \"Branches\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#deleting-branches\"\n  }, \"Deleting branches\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#deleting-remote-branches\"\n  }, \"Deleting remote branches\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#delete-all-branches-but-keeping-others-like-develop-and-master\"\n  }, \"Delete all branches but keeping others like \\u201Cdevelop\\u201D and \\u201Cmaster\\u201D\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#delete-remote-branches\"\n  }, \"Delete remote branches\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#stashes\"\n  }, \"Stashes\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#save-changes-to-a-stash\"\n  }, \"Save changes to a stash\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#list-all-stashes\"\n  }, \"List all stashes.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#annotate-stashes-with-a-description\"\n  }, \"Annotate stashes with a description\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#re-apply-the-most-recently-created-stash-and-delete-it-from-stash-list\"\n  }, \"Re-apply the most recently created stash and delete it from stash list\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#apply-the-specified-stash-by-passing-its-identifier\"\n  }, \"Apply the specified stash by passing its identifier\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#partial-stash\"\n  }, \"Partial stash\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#creating-a-branch-from-your-stash\"\n  }, \"Creating a branch from your stash\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#worktree\"\n  }, \"Worktree\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#tags\"\n  }, \"Tags\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#alias\"\n  }, \"Alias\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#sources\"\n  }, \"Sources\"))), mdx(\"h2\", {\n    \"id\": \"flight-rules-for-git\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"https://github.com/k88hudson/git-flight-rules\"\n  }, \"Flight rules for Git\")), mdx(\"p\", null, \"Flight rules for git that list, step-by-step, what to do if X occurs, and why. Essentially, they are extremely detailed, scenario-specific standard operating procedures.\"), mdx(\"h2\", {\n    \"id\": \"tips\"\n  }, \"Tips\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".gitkeep\"), \": a dummy file to enable git to track a completely empty directory\")), mdx(\"h2\", {\n    \"id\": \"tools\"\n  }, \"Tools\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/banga/git-split-diffs\"\n  }, \"git-split-diffs\"))), mdx(\"img\", {\n    \"src\": \"https://github.com/banga/git-split-diffs/raw/main/screenshots/dark.png?raw=true\",\n    \"alt\": null\n  }), mdx(\"p\", null, \"GitHub style split diffs with syntax highlighting in your terminal.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/gauseen/gum\"\n  }, \"gum\"), \": manage multiple git user config\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"yarn global add @gauseen/gum\\ngum list\\ngum set user1 --name 'user 1' --email user1@email.com\\ngum use user1\\n#or\\ngum use user1 --global\\n\")), mdx(\"h2\", {\n    \"id\": \"misc\"\n  }, \"Misc\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"# Discards all unstaged changes\\ngit reset --hard HEAD\\n# Throw away local modifications\\ngit checkout -f\\n\")), mdx(\"h2\", {\n    \"id\": \"check-git-config\"\n  }, \"Check Git config\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git config --list\\ngit config user.name\\ngit config user.email\\n\")), mdx(\"h2\", {\n    \"id\": \"change-git-remote-url\"\n  }, \"Change Git Remote URL\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git remote set-url origin git@github.com-lkcozy:lkcozy/code-notes.git\\n\")), mdx(\"h2\", {\n    \"id\": \"undoing-mistakes\"\n  }, \"Undoing Mistakes\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"# Discard Uncommitted Changes In A File\\ngit restore index.html\\n# Fix The Very Last Commit\\ngit commit --amend -m \\\"A message without typos\\\"\\n# forgotten to add a certain change\\ngit add forgotten-change.txt\\ngit commit --amend --no-edit\\n# Recover Lost Commits Using The Reflog\\ngit reflog\\ngit branch happy-ending e5b19e4\\n# Restore A Single File From A Previous State\\ngit log -- <filename>\\ngit checkout <deletion commit hash>~1 -- <filename>\\n\")), mdx(\"h2\", {\n    \"id\": \"rebase\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"https://git-rebase.io/\"\n  }, \"Rebase\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"# amending your last commit\\ngit commit -a --amend\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"# fixing up older commits, -i for interactive\\ngit rebase -i HEAD~3\\n\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://stackoverflow.com/questions/2472254/when-should-i-use-git-pull-rebase\"\n  }, \"When should I use git pull --rebase?\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Point 1\"), \"\\nUse \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git pull --rebase\"), \" only if you know you forgot to push your commits before someone else does the same.\"), mdx(\"p\", null, \"If you did not commit anything, but your working space is not clean, just git stash before to git pull. This way you won't silently rewrite your history (which could silently drop some of your work).\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Point 2\"), \"\\nI think you should use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git pull --rebase\"), \" when collaborating with others on the same branch, which will avoid the extra merge commits.\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://blog.manos-liakos.dev/rebase-vs-pull/\"\n  }, \"Don't git pull, use git pull --rebase instead\")), mdx(\"img\", {\n    \"src\": \"https://blog.manos-liakos.dev/static/39833f875652a1793abffbbc15973e33/74200/git-rebase.webp\",\n    \"alt\": null\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git pull = git fetch + git merge FETCH_HEAD\\ngit pull --rebase =  git fetch + git rebase FETCH_HEAD\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Git pull --rebase\"), \" effectively reapplying our local changes on top of the remote changes, resulting in a tidy, linear commit history.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Tip #1: Use git config --global pull.rebase true to avoid typing the --rebase flag each time you pull \\uD83E\\uDDD0\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Tip #2: Don't forget that you can do all sorts of editing to your commits, before pushing them by using interactive rebase.\")), mdx(\"h2\", {\n    \"id\": \"recover-from-git-reset---hard\"\n  }, \"Recover from git reset --hard\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git reflog show\\n\\n4b6cf8e (HEAD -> master, origin/master, origin/HEAD) HEAD@{0}: reset: moving to origin/master\\n295f07d HEAD@{1}: pull: Merge made by the 'recursive' strategy.\\n7c49ec7 HEAD@{2}: commit: restore dependencies to the User model\\nfa57f59 HEAD@{3}: commit: restore dependencies to the Profile model\\n3431936 HEAD@{4}: commit (amend): restore admin\\n033f5c0 HEAD@{5}: commit: restore admin\\necd2c1d HEAD@{6}: commit: re-enable settings app\\n\\n# the commit the HEAD to be pointed to is 7c49ec7 (restore dependencies to the User model)\\n\\ngit reset HEAD@{2}\\n\")), mdx(\"h2\", {\n    \"id\": \"count-all-tracked-files-in-a-git-respository\"\n  }, \"Count all tracked files in a git respository\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git ls-files notes| wc -l\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"git ls-files\"), \": prints out a list of all the tracked files in the repository, one per line.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"|\"), \": operator funnels the output from the preceding command into the command following the pipe.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"wc -l\"), \": calls the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://en.wikipedia.org/wiki/Wc_%28Unix%29\"\n  }, \"word count (wc)\"), \" program. Passing the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-l\"), \" flag asks it to return the total number of lines.\")), mdx(\"h2\", {\n    \"id\": \"discard-user-email-xxxx-related-commits-after-the-specific-commit\"\n  }, \"Discard user email \\\"xxxx\\\" related commits after the specific commit\"), mdx(\"p\", null, \"Create a backup of the repository:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git clone --mirror . <backup-folder>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git filter-branch --commit-filter 'if [ \\\"$GIT_AUTHOR_EMAIL\\\" = \\\"REPLACE_EMAIL\\\" ]; then skip_commit \\\"$@\\\"; else git commit-tree \\\"$@\\\"; fi' [REPLACE_COMMIT_ID]..HEAD\\n\")), mdx(\"h2\", {\n    \"id\": \"checkout-filesfolders-from-a-specific-branch\"\n  }, \"Checkout files/folders from a specific branch\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"rm -rf src .package.json\\ngit checkout main .src package.json\\n\")), mdx(\"h2\", {\n    \"id\": \"branches\"\n  }, \"Branches\"), mdx(\"p\", null, \"List all local branches\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git branch\\n\")), mdx(\"p\", null, \"List all merged branches\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git branch --merged\\n\")), mdx(\"p\", null, \"Same as above but exclude master and develop branches\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git branch --merged | egrep -v \\\"(^\\\\*|master|develop)\\\"\\n\")), mdx(\"h3\", {\n    \"id\": \"deleting-branches\"\n  }, \"Deleting branches\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git branch -d branch_name\\n\")), mdx(\"h3\", {\n    \"id\": \"deleting-remote-branches\"\n  }, \"Deleting remote branches\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git push <remote_name> -d branch_name\\n\")), mdx(\"h3\", {\n    \"id\": \"delete-all-branches-but-keeping-others-like-develop-and-master\"\n  }, \"Delete all branches but keeping others like \\u201Cdevelop\\u201D and \\u201Cmaster\\u201D\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git branch | grep -v \\\"develop\\\" | grep -v \\\"master\\\" | xargs git branch -D\\n\")), mdx(\"blockquote\", null, mdx(\"ul\", {\n    parentName: \"blockquote\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"grep\"), \": global regular expression - print lines matching a pattern\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"v\"), \": invert-match, select non-matching lines\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"xargs\"), \": read lines of text from the standard input or from the output of another command command and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"turn them into commands and execute them\"), \", which is used for building execution pipelines using the standard data streams\"))), mdx(\"h3\", {\n    \"id\": \"delete-remote-branches\"\n  }, \"Delete remote branches\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git push origin --delete branch1 branch2\\n\")), mdx(\"h2\", {\n    \"id\": \"stashes\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"https://www.atlassian.com/git/tutorials/saving-changes/git-stash\"\n  }, \"Stashes\")), mdx(\"h3\", {\n    \"id\": \"save-changes-to-a-stash\"\n  }, \"Save changes to a stash\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git push origin --delete branch1 branch2\\n\")), mdx(\"h3\", {\n    \"id\": \"list-all-stashes\"\n  }, \"List all stashes.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git stash list\\n\")), mdx(\"h3\", {\n    \"id\": \"annotate-stashes-with-a-description\"\n  }, \"Annotate stashes with a description\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git stash -u save 'message'\\n\")), mdx(\"h3\", {\n    \"id\": \"re-apply-the-most-recently-created-stash-and-delete-it-from-stash-list\"\n  }, \"Re-apply the most recently created stash and delete it from stash list\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git stash pop\\n\")), mdx(\"h3\", {\n    \"id\": \"apply-the-specified-stash-by-passing-its-identifier\"\n  }, \"Apply the specified stash by passing its identifier\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git stash apply stash@{2}\\n\")), mdx(\"h3\", {\n    \"id\": \"partial-stash\"\n  }, \"Partial stash\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git stash -p\\n\")), mdx(\"h3\", {\n    \"id\": \"creating-a-branch-from-your-stash\"\n  }, \"Creating a branch from your stash\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git stash branch add-stylesheet stash@{1}\\n\")), mdx(\"h2\", {\n    \"id\": \"worktree\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"https://fev.al/posts/git-worktree/\"\n  }, \"Worktree\")), mdx(\"p\", null, \"Git worktree is a powerful feature that allows you to work on multiple branches simultaneously without switching between them.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"git worktree add ../feature-branch feature-branch\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create a new directory named \\\"feature-branch\\\" in the parent directory of your current repository\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Check out the \\\"feature-branch\\\" in that new directory\")), mdx(\"p\", null, \"Using git worktree allows you to:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Work on multiple branches simultaneously without stashing or committing incomplete work\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Easily switch context between different tasks or features\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Perform operations like building or testing on one branch while actively developing on another\")), mdx(\"h2\", {\n    \"id\": \"tags\"\n  }, \"Tags\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"# list all git tags\\ngit tag -l\\ngit tag --list\\n\\n# create a git tag\\ngit tag v1.9.2\\n\\n# remove a git tag\\ngit tag -d v1.9.2\\ngit tag --delete v1.9.2\\n\\n# push all tags to remote\\ngit push --follow-tags origin master\\n\")), mdx(\"h2\", {\n    \"id\": \"alias\"\n  }, \"Alias\"), mdx(\"details\", null, mdx(\"summary\", null, \"A list of git aliases to include in your `~/.gitconfig` file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"\\n[alias]\\ns=status\\nbr = branch --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) %(color:green)(%(committerdate:relative)) [%(authorname)]' --sort=-committerdate\\nundo=reset HEAD~1 --mixed\\ncm = commit --all -m\\ncma = commit -a\\nco = checkout\\ncob = checkout -b\\ndiscard = reset --hard HEAD\\ndel= branch -D\\nst = stash -u\\npop = stash pop\\nstat = log --shortstat\\nd = diff --color-words\\nwho = shortlog -s --\\nlg = log --graph --all --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative\\nlpo = log --pretty=oneline --abbrev-commit --graph --decorate --all\\nscrub = !git reset --hard && git clean -fd\\nrv = remote -v\\nsts = status\\nblg = log --graph --decorate --all --abbrev-commit --pretty=oneline\\nslog = log --graph --simplify-by-decoration --all --abbrev-commit --pretty=oneline\\nbusythisweek = shortlog --since=one.week.ago -n #https://git.wiki.kernel.org/index.php?title=Aliases\\naliases = !git config --get-regexp 'alias.\\\\*' | colrm 1 6 | sed 's/[ ]/ = /'\\nwhitespaceviolations = \\\"!git diff --check $(git empty-tree-sha1)\\\"\\napp = commit -a --amend --no-edit\\ncia = commit -a --amend\\nup = remote update --prune\\npublish = !git checkout -b $1 && git push -u origin\\nprb=pull --rebase\\nsm=!git st && git co master && git prb\\n\"))), mdx(\"h2\", {\n    \"id\": \"sources\"\n  }, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/git-tips/tips\"\n  }, \"git-tips\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://gitsheet.wtf/\"\n  }, \"gitsheet.wtf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://gitexplorer.com/\"\n  }, \"gitexplorer.com\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.micah.soy/posts/setting-up-git-identities/\"\n  }, \"Setting Up Git Identities\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.smashingmagazine.com/2021/05/undoing-mistakes-git-part1/\"\n  }, \"A Guide To Undoing Mistakes With Git\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Git-Version control system","tags":["git","cheatsheet"],"emoji":"💡","link":null,"modified":"May 19, 2023","modifiedTimestamp":"2023-05-19T20:08:26.000Z"},"references":[],"fields":{"slug":"/git"},"tableOfContents":{"items":[{"url":"#flight-rules-for-git","title":"Flight rules for Git"},{"url":"#tips","title":"Tips"},{"url":"#tools","title":"Tools"},{"url":"#misc","title":"Misc"},{"url":"#check-git-config","title":"Check Git config"},{"url":"#change-git-remote-url","title":"Change Git Remote URL"},{"url":"#undoing-mistakes","title":"Undoing Mistakes"},{"url":"#rebase","title":"Rebase"},{"url":"#recover-from-git-reset---hard","title":"Recover from git reset --hard"},{"url":"#count-all-tracked-files-in-a-git-respository","title":"Count all tracked files in a git respository"},{"url":"#discard-user-email-xxxx-related-commits-after-the-specific-commit","title":"Discard user email \"xxxx\" related commits after the specific commit"},{"url":"#checkout-filesfolders-from-a-specific-branch","title":"Checkout files/folders from a specific branch"},{"url":"#branches","title":"Branches","items":[{"url":"#deleting-branches","title":"Deleting branches"},{"url":"#deleting-remote-branches","title":"Deleting remote branches"},{"url":"#delete-all-branches-but-keeping-others-like-develop-and-master","title":"Delete all branches but keeping others like “develop” and “master”"},{"url":"#delete-remote-branches","title":"Delete remote branches"}]},{"url":"#stashes","title":"Stashes","items":[{"url":"#save-changes-to-a-stash","title":"Save changes to a stash"},{"url":"#list-all-stashes","title":"List all stashes."},{"url":"#annotate-stashes-with-a-description","title":"Annotate stashes with a description"},{"url":"#re-apply-the-most-recently-created-stash-and-delete-it-from-stash-list","title":"Re-apply the most recently created stash and delete it from stash list"},{"url":"#apply-the-specified-stash-by-passing-its-identifier","title":"Apply the specified stash by passing its identifier"},{"url":"#partial-stash","title":"Partial stash"},{"url":"#creating-a-branch-from-your-stash","title":"Creating a branch from your stash"}]},{"url":"#worktree","title":"Worktree"},{"url":"#tags","title":"Tags"},{"url":"#alias","title":"Alias"},{"url":"#sources","title":"Sources"}]},"parent":{"relativePath":"git.md"}}},"pageContext":{"id":"78bbf7b4-03eb-534f-8523-fb6034604988","previous":{"id":"35918ab3-cdd4-5db8-a126-7407cf4c5a5b","frontmatter":{"title":"Sync Your Fork with the Original Git Repository","tags":["git","github"]},"fields":{"slug":"/git_fork_sync"}},"next":{"id":"33d7db55-c91e-5e6b-9f1b-ecb2dbaead81","frontmatter":{"title":"GIS(Geographic Information System)","tags":["gis"]},"fields":{"slug":"/gis"}},"hasUntagged":true,"basePath":"/","tags":[{"tag":"Archived","totalCount":3,"slug":"/archived","path":"/tag/archived"},{"tag":"Ethereum","totalCount":3,"slug":"/ethereum","path":"/tag/ethereum"},{"tag":"NFT","totalCount":1,"slug":"/nft","path":"/tag/nft"},{"tag":"UI/UX","totalCount":1,"slug":"/uiux","path":"/tag/uiux"},{"tag":"academic","totalCount":2,"slug":"/academic","path":"/tag/academic"},{"tag":"ai","totalCount":4,"slug":"/ai","path":"/tag/ai"},{"tag":"algorithm","totalCount":13,"slug":"/algorithm","path":"/tag/algorithm"},{"tag":"analysis","totalCount":3,"slug":"/analysis","path":"/tag/analysis"},{"tag":"api","totalCount":5,"slug":"/api","path":"/tag/api"},{"tag":"apollo","totalCount":1,"slug":"/apollo","path":"/tag/apollo"},{"tag":"architecture","totalCount":2,"slug":"/architecture","path":"/tag/architecture"},{"tag":"asciidoc","totalCount":3,"slug":"/asciidoc","path":"/tag/asciidoc"},{"tag":"audio","totalCount":1,"slug":"/audio","path":"/tag/audio"},{"tag":"automation","totalCount":1,"slug":"/automation","path":"/tag/automation"},{"tag":"aws","totalCount":9,"slug":"/aws","path":"/tag/aws"},{"tag":"bash","totalCount":2,"slug":"/bash","path":"/tag/bash"},{"tag":"basketball","totalCount":2,"slug":"/basketball","path":"/tag/basketball"},{"tag":"best-practices","totalCount":3,"slug":"/best-practices","path":"/tag/best-practices"},{"tag":"big data","totalCount":3,"slug":"/big-data","path":"/tag/big-data"},{"tag":"blockchain","totalCount":15,"slug":"/blockchain","path":"/tag/blockchain"},{"tag":"book","totalCount":2,"slug":"/book","path":"/tag/book"},{"tag":"bst","totalCount":1,"slug":"/bst","path":"/tag/bst"},{"tag":"career","totalCount":2,"slug":"/career","path":"/tag/career"},{"tag":"cell","totalCount":1,"slug":"/cell","path":"/tag/cell"},{"tag":"chart","totalCount":1,"slug":"/chart","path":"/tag/chart"},{"tag":"cheatsheet","totalCount":2,"slug":"/cheatsheet","path":"/tag/cheatsheet"},{"tag":"chrome","totalCount":1,"slug":"/chrome","path":"/tag/chrome"},{"tag":"cli","totalCount":11,"slug":"/cli","path":"/tag/cli"},{"tag":"cloud","totalCount":1,"slug":"/cloud","path":"/tag/cloud"},{"tag":"code review","totalCount":1,"slug":"/code-review","path":"/tag/code-review"},{"tag":"code-review","totalCount":1,"slug":"/code-review","path":"/tag/code-review"},{"tag":"communication","totalCount":4,"slug":"/communication","path":"/tag/communication"},{"tag":"contact tracking","totalCount":1,"slug":"/contact-tracking","path":"/tag/contact-tracking"},{"tag":"container","totalCount":1,"slug":"/container","path":"/tag/container"},{"tag":"converter","totalCount":1,"slug":"/converter","path":"/tag/converter"},{"tag":"covid19","totalCount":1,"slug":"/covid19","path":"/tag/covid19"},{"tag":"crypto","totalCount":1,"slug":"/crypto","path":"/tag/crypto"},{"tag":"cryptography","totalCount":1,"slug":"/cryptography","path":"/tag/cryptography"},{"tag":"csv","totalCount":1,"slug":"/csv","path":"/tag/csv"},{"tag":"data","totalCount":1,"slug":"/data","path":"/tag/data"},{"tag":"data science","totalCount":1,"slug":"/data-science","path":"/tag/data-science"},{"tag":"database","totalCount":11,"slug":"/database","path":"/tag/database"},{"tag":"design","totalCount":3,"slug":"/design","path":"/tag/design"},{"tag":"dev","totalCount":1,"slug":"/dev","path":"/tag/dev"},{"tag":"develop","totalCount":1,"slug":"/develop","path":"/tag/develop"},{"tag":"development","totalCount":1,"slug":"/development","path":"/tag/development"},{"tag":"devops","totalCount":1,"slug":"/devops","path":"/tag/devops"},{"tag":"discipline","totalCount":1,"slug":"/discipline","path":"/tag/discipline"},{"tag":"distributed","totalCount":1,"slug":"/distributed","path":"/tag/distributed"},{"tag":"docker","totalCount":5,"slug":"/docker","path":"/tag/docker"},{"tag":"docx","totalCount":1,"slug":"/docx","path":"/tag/docx"},{"tag":"dog","totalCount":1,"slug":"/dog","path":"/tag/dog"},{"tag":"duckdb","totalCount":1,"slug":"/duckdb","path":"/tag/duckdb"},{"tag":"dynamodb","totalCount":2,"slug":"/dynamodb","path":"/tag/dynamodb"},{"tag":"edr","totalCount":1,"slug":"/edr","path":"/tag/edr"},{"tag":"education","totalCount":1,"slug":"/education","path":"/tag/education"},{"tag":"efficiency","totalCount":1,"slug":"/efficiency","path":"/tag/efficiency"},{"tag":"emergency","totalCount":1,"slug":"/emergency","path":"/tag/emergency"},{"tag":"engineering","totalCount":1,"slug":"/engineering","path":"/tag/engineering"},{"tag":"error-handling","totalCount":1,"slug":"/error-handling","path":"/tag/error-handling"},{"tag":"eslint","totalCount":1,"slug":"/eslint","path":"/tag/eslint"},{"tag":"ethereum","totalCount":2,"slug":"/ethereum","path":"/tag/ethereum"},{"tag":"experience","totalCount":1,"slug":"/experience","path":"/tag/experience"},{"tag":"functional","totalCount":1,"slug":"/functional","path":"/tag/functional"},{"tag":"game","totalCount":1,"slug":"/game","path":"/tag/game"},{"tag":"gis","totalCount":27,"slug":"/gis","path":"/tag/gis"},{"tag":"git","totalCount":5,"slug":"/git","path":"/tag/git"},{"tag":"github","totalCount":4,"slug":"/github","path":"/tag/github"},{"tag":"google","totalCount":3,"slug":"/google","path":"/tag/google"},{"tag":"graphql","totalCount":4,"slug":"/graphql","path":"/tag/graphql"},{"tag":"handbook","totalCount":1,"slug":"/handbook","path":"/tag/handbook"},{"tag":"hash","totalCount":1,"slug":"/hash","path":"/tag/hash"},{"tag":"hci","totalCount":1,"slug":"/hci","path":"/tag/hci"},{"tag":"health","totalCount":1,"slug":"/health","path":"/tag/health"},{"tag":"image","totalCount":1,"slug":"/image","path":"/tag/image"},{"tag":"immunotherapies","totalCount":1,"slug":"/immunotherapies","path":"/tag/immunotherapies"},{"tag":"infrastructure","totalCount":1,"slug":"/infrastructure","path":"/tag/infrastructure"},{"tag":"insights","totalCount":1,"slug":"/insights","path":"/tag/insights"},{"tag":"interface","totalCount":1,"slug":"/interface","path":"/tag/interface"},{"tag":"interoperability","totalCount":2,"slug":"/interoperability","path":"/tag/interoperability"},{"tag":"interview","totalCount":3,"slug":"/interview","path":"/tag/interview"},{"tag":"investment","totalCount":1,"slug":"/investment","path":"/tag/investment"},{"tag":"iot","totalCount":12,"slug":"/iot","path":"/tag/iot"},{"tag":"javascript","totalCount":19,"slug":"/javascript","path":"/tag/javascript"},{"tag":"js","totalCount":13,"slug":"/js","path":"/tag/js"},{"tag":"json","totalCount":1,"slug":"/json","path":"/tag/json"},{"tag":"jupyter","totalCount":2,"slug":"/jupyter","path":"/tag/jupyter"},{"tag":"kubernetes","totalCount":1,"slug":"/kubernetes","path":"/tag/kubernetes"},{"tag":"laws","totalCount":1,"slug":"/laws","path":"/tag/laws"},{"tag":"leadership","totalCount":1,"slug":"/leadership","path":"/tag/leadership"},{"tag":"leetcode","totalCount":8,"slug":"/leetcode","path":"/tag/leetcode"},{"tag":"life","totalCount":1,"slug":"/life","path":"/tag/life"},{"tag":"linear algebra","totalCount":1,"slug":"/linear-algebra","path":"/tag/linear-algebra"},{"tag":"linux","totalCount":1,"slug":"/linux","path":"/tag/linux"},{"tag":"log","totalCount":1,"slug":"/log","path":"/tag/log"},{"tag":"luxon","totalCount":1,"slug":"/luxon","path":"/tag/luxon"},{"tag":"machine learning","totalCount":2,"slug":"/machine-learning","path":"/tag/machine-learning"},{"tag":"macos","totalCount":5,"slug":"/macos","path":"/tag/macos"},{"tag":"management","totalCount":193,"slug":"/management","path":"/tag/management"},{"tag":"mapbox","totalCount":1,"slug":"/mapbox","path":"/tag/mapbox"},{"tag":"markdown","totalCount":1,"slug":"/markdown","path":"/tag/markdown"},{"tag":"math","totalCount":1,"slug":"/math","path":"/tag/math"},{"tag":"methodology","totalCount":1,"slug":"/methodology","path":"/tag/methodology"},{"tag":"microservices","totalCount":2,"slug":"/microservices","path":"/tag/microservices"},{"tag":"mobile","totalCount":1,"slug":"/mobile","path":"/tag/mobile"},{"tag":"models","totalCount":1,"slug":"/models","path":"/tag/models"},{"tag":"moment","totalCount":1,"slug":"/moment","path":"/tag/moment"},{"tag":"mqtt","totalCount":2,"slug":"/mqtt","path":"/tag/mqtt"},{"tag":"negotiation","totalCount":1,"slug":"/negotiation","path":"/tag/negotiation"},{"tag":"node","totalCount":5,"slug":"/node","path":"/tag/node"},{"tag":"nodejs","totalCount":3,"slug":"/nodejs","path":"/tag/nodejs"},{"tag":"note","totalCount":23,"slug":"/note","path":"/tag/note"},{"tag":"npm","totalCount":1,"slug":"/npm","path":"/tag/npm"},{"tag":"oauth","totalCount":1,"slug":"/oauth","path":"/tag/oauth"},{"tag":"object detection","totalCount":2,"slug":"/object-detection","path":"/tag/object-detection"},{"tag":"odata","totalCount":1,"slug":"/odata","path":"/tag/odata"},{"tag":"ogc","totalCount":9,"slug":"/ogc","path":"/tag/ogc"},{"tag":"openapi","totalCount":1,"slug":"/openapi","path":"/tag/openapi"},{"tag":"operators","totalCount":1,"slug":"/operators","path":"/tag/operators"},{"tag":"orchestrator","totalCount":1,"slug":"/orchestrator","path":"/tag/orchestrator"},{"tag":"pandoc","totalCount":2,"slug":"/pandoc","path":"/tag/pandoc"},{"tag":"parent","totalCount":1,"slug":"/parent","path":"/tag/parent"},{"tag":"patterns","totalCount":1,"slug":"/patterns","path":"/tag/patterns"},{"tag":"performance","totalCount":2,"slug":"/performance","path":"/tag/performance"},{"tag":"personal-growth","totalCount":82,"slug":"/personal-growth","path":"/tag/personal-growth"},{"tag":"pet","totalCount":1,"slug":"/pet","path":"/tag/pet"},{"tag":"philosophy","totalCount":1,"slug":"/philosophy","path":"/tag/philosophy"},{"tag":"pipeline","totalCount":1,"slug":"/pipeline","path":"/tag/pipeline"},{"tag":"pipenv","totalCount":1,"slug":"/pipenv","path":"/tag/pipenv"},{"tag":"pm2","totalCount":1,"slug":"/pm2","path":"/tag/pm2"},{"tag":"point free","totalCount":1,"slug":"/point-free","path":"/tag/point-free"},{"tag":"postgresql","totalCount":3,"slug":"/postgresql","path":"/tag/postgresql"},{"tag":"presentation","totalCount":2,"slug":"/presentation","path":"/tag/presentation"},{"tag":"principles","totalCount":1,"slug":"/principles","path":"/tag/principles"},{"tag":"privacy","totalCount":1,"slug":"/privacy","path":"/tag/privacy"},{"tag":"problem solving","totalCount":1,"slug":"/problem-solving","path":"/tag/problem-solving"},{"tag":"program","totalCount":2,"slug":"/program","path":"/tag/program"},{"tag":"programming","totalCount":5,"slug":"/programming","path":"/tag/programming"},{"tag":"provenance","totalCount":1,"slug":"/provenance","path":"/tag/provenance"},{"tag":"psychology","totalCount":3,"slug":"/psychology","path":"/tag/psychology"},{"tag":"python","totalCount":7,"slug":"/python","path":"/tag/python"},{"tag":"react","totalCount":7,"slug":"/react","path":"/tag/react"},{"tag":"reading","totalCount":1,"slug":"/reading","path":"/tag/reading"},{"tag":"reasoning","totalCount":1,"slug":"/reasoning","path":"/tag/reasoning"},{"tag":"regex","totalCount":1,"slug":"/regex","path":"/tag/regex"},{"tag":"relationship","totalCount":1,"slug":"/relationship","path":"/tag/relationship"},{"tag":"remote","totalCount":1,"slug":"/remote","path":"/tag/remote"},{"tag":"remote-work","totalCount":1,"slug":"/remote-work","path":"/tag/remote-work"},{"tag":"research","totalCount":7,"slug":"/research","path":"/tag/research"},{"tag":"resources","totalCount":1,"slug":"/resources","path":"/tag/resources"},{"tag":"ruby","totalCount":1,"slug":"/ruby","path":"/tag/ruby"},{"tag":"rxjs","totalCount":1,"slug":"/rxjs","path":"/tag/rxjs"},{"tag":"scalable","totalCount":1,"slug":"/scalable","path":"/tag/scalable"},{"tag":"scraping","totalCount":1,"slug":"/scraping","path":"/tag/scraping"},{"tag":"security","totalCount":3,"slug":"/security","path":"/tag/security"},{"tag":"sensorThings API","totalCount":1,"slug":"/sensor-things-api","path":"/tag/sensor-things-api"},{"tag":"serverless","totalCount":1,"slug":"/serverless","path":"/tag/serverless"},{"tag":"sh","totalCount":1,"slug":"/sh","path":"/tag/sh"},{"tag":"shell","totalCount":6,"slug":"/shell","path":"/tag/shell"},{"tag":"spatial","totalCount":2,"slug":"/spatial","path":"/tag/spatial"},{"tag":"sql","totalCount":5,"slug":"/sql","path":"/tag/sql"},{"tag":"sta","totalCount":5,"slug":"/sta","path":"/tag/sta"},{"tag":"startup","totalCount":1,"slug":"/startup","path":"/tag/startup"},{"tag":"step functions","totalCount":1,"slug":"/step-functions","path":"/tag/step-functions"},{"tag":"stock","totalCount":1,"slug":"/stock","path":"/tag/stock"},{"tag":"structures","totalCount":1,"slug":"/structures","path":"/tag/structures"},{"tag":"style","totalCount":1,"slug":"/style","path":"/tag/style"},{"tag":"swe","totalCount":1,"slug":"/swe","path":"/tag/swe"},{"tag":"table","totalCount":1,"slug":"/table","path":"/tag/table"},{"tag":"team","totalCount":2,"slug":"/team","path":"/tag/team"},{"tag":"team-building","totalCount":1,"slug":"/team-building","path":"/tag/team-building"},{"tag":"terraform","totalCount":1,"slug":"/terraform","path":"/tag/terraform"},{"tag":"test","totalCount":2,"slug":"/test","path":"/tag/test"},{"tag":"theories","totalCount":1,"slug":"/theories","path":"/tag/theories"},{"tag":"thinking","totalCount":2,"slug":"/thinking","path":"/tag/thinking"},{"tag":"time","totalCount":3,"slug":"/time","path":"/tag/time"},{"tag":"tips","totalCount":2,"slug":"/tips","path":"/tag/tips"},{"tag":"tools","totalCount":4,"slug":"/tools","path":"/tag/tools"},{"tag":"tree","totalCount":3,"slug":"/tree","path":"/tag/tree"},{"tag":"typescript","totalCount":1,"slug":"/typescript","path":"/tag/typescript"},{"tag":"ubuntu","totalCount":1,"slug":"/ubuntu","path":"/tag/ubuntu"},{"tag":"ui","totalCount":2,"slug":"/ui","path":"/tag/ui"},{"tag":"unix","totalCount":1,"slug":"/unix","path":"/tag/unix"},{"tag":"vaccine","totalCount":1,"slug":"/vaccine","path":"/tag/vaccine"},{"tag":"video","totalCount":1,"slug":"/video","path":"/tag/video"},{"tag":"vscode","totalCount":1,"slug":"/vscode","path":"/tag/vscode"},{"tag":"web","totalCount":13,"slug":"/web","path":"/tag/web"},{"tag":"wine","totalCount":1,"slug":"/wine","path":"/tag/wine"},{"tag":"wkt","totalCount":1,"slug":"/wkt","path":"/tag/wkt"},{"tag":"writing","totalCount":15,"slug":"/writing","path":"/tag/writing"},{"tag":"xml","totalCount":1,"slug":"/xml","path":"/tag/xml"},{"tag":"yarn","totalCount":1,"slug":"/yarn","path":"/tag/yarn"},{"tag":"yolo","totalCount":2,"slug":"/yolo","path":"/tag/yolo"},{"tag":"zsh","totalCount":1,"slug":"/zsh","path":"/tag/zsh"}]}},
    "staticQueryHashes": ["1308211557","2744905544","467212769"]}