{
    "componentChunkName": "component---node-modules-gatsby-theme-code-notes-src-templates-note-js",
    "path": "/github-actions",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Github Actions\",\n  \"emoji\": \"üìù\",\n  \"tags\": [\"git\", \"github\"],\n  \"link\": null,\n  \"created\": \"2020-06-29T05:54:14.000Z\",\n  \"modified\": \"2021-05-03T21:46:56.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#what-are-github-actions\"\n  }, \"What Are GitHub Actions?\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#workflow-syntax-for-github-actions\"\n  }, \"Workflow syntax for GitHub Actions\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#test-github-actions-locally\"\n  }, \"Test GitHub Actions locally\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#debug-a-github-actions-secrets\"\n  }, \"Debug a Github Actions' secrets\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#example\"\n  }, \"Example\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#deploy-your-projects-to-github-pages\"\n  }, \"Deploy your projects to Github Pages\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#outputs\"\n  }, \"outputs\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#action-composition\"\n  }, \"Action composition\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#useful-github-actions\"\n  }, \"Useful Github Actions\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#references\"\n  }, \"References\"))), mdx(\"h2\", {\n    \"id\": \"what-are-github-actions\"\n  }, \"What Are GitHub Actions?\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/features/actions\"\n  }, \"GitHub Actions\"), \" allow you to run arbitrary code in response to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://help.github.com/en/actions/reference/events-that-trigger-workflows\"\n  }, \"events\"), \". Events are activities that happen on GitHub such as:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Opening a pull request\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Making an issue comment\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Labeling an issue\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Creating a new branch\\n\\u2026 and many more\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yml\"\n  }, \"name: \\uD83D\\uDE80 Deploy\\n\\non:\\n  push:\\n    branches:\\n      - master\\n\\njobs:\\n  deploy_source:\\n    name: build and deploy lambda\\n    strategy:\\n      matrix:\\n        node-version: [18.x]\\n    runs-on: ubuntu-latest\\n    steps:\\n      - uses: actions/checkout@v2\\n      - name: Use Node.js ${{ matrix.node-version }}\\n        uses: actions/setup-node@v1.4.2\\n        with:\\n          node-version: ${{ matrix.node-version }}\\n      - name: Install dependencies, Build application and Zip dist folder contents\\n        run: yarn install  && zip -qq -r -j ./bundle.zip ./test/*\\n      - name: deploy zip to aws lambda\\n        uses: appleboy/lambda-action@master\\n        with:\\n          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}\\n          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\\n          aws_region: ${{ secrets.AWS_REGION }}\\n          function_name: kan_test\\n          zip_file: bundle.zip\\n\")), mdx(\"h2\", {\n    \"id\": \"workflow-syntax-for-github-actions\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions\"\n  }, \"Workflow syntax for GitHub Actions\")), mdx(\"p\", null, \"Workflow files use YAML syntax, and must have either a .yml or .yaml file extension. If you're new to YAML and want to learn more, see \\\"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.codeproject.com/Articles/1214409/Learn-YAML-in-five-minutes\"\n  }, \"Learn YAML in five minutes.\"), \"\\\"\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"name\"), \": The name of your workflow.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"on(required)\"), \": The name of the GitHub event that triggers the workflow. You can provide a single event \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"string\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"array\"), \" of events, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"array\"), \" of event types\"), mdx(\"p\", null, \"Example using a single event\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yml\"\n  }, \"# Trigger on push\\non: push\\n\")), mdx(\"p\", null, \"Example using a list of events\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yml\"\n  }, \"# Trigger the workflow on push or pull request\\non: [push, pull_request]\\n\")), mdx(\"p\", null, \"Example using multiple events with activity types or configuration\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yml\"\n  }, \"on:\\n  # Trigger the workflow on push or pull request,\\n  # but only for the master branch\\n  push:\\n    branches:\\n      - master\\n      - \\\"releases/**\\\"\\n    paths:\\n      - \\\"**.js\\\"\\n  pull_request:\\n    branches:\\n      - master\\n  # Also trigger on page_build, as well as release created events\\n  page_build:\\n  release:\\n    types: # This configuration does not affect the page_build event above\\n      - created\\n  schedule:\\n    # * is a special character in YAML so you have to quote this string\\n    - cron: \\\"*/15 * * * *\\\"\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://crontab.guru/\"\n  }, \"crontab guru\"), \": The quick and simple editor for cron schedule expressions\")), mdx(\"p\", null, \"Some helpful patterns\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"// Every Monday at 1PM UTC (9AM EST)\\n0 13 * * 1\\n\\n// At the end of every day\\n0 0 * * *\\n\\n// Every 10 minutes\\n*/10 * * * *\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"jobs\"), \": A workflow run is made up of one or more jobs. Jobs run in parallel by default. You can run an unlimited number of jobs as long as you are within the workflow usage limits. For more information, see \\\"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#usage-limits\"\n  }, \"Usage limits\"), \".\\\"\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"jobs:\\n  my_first_job:\\n    name: My first job\\n  my_second_job:\\n    name: My second job\\n\")), mdx(\"p\", null, \"Identifies any jobs that must complete successfully before this job will run.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"jobs:\\n  job1:\\n  job2:\\n    needs: job1\\n  job3:\\n    needs: [job1, job2]\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"runs-on\"), \": The type of machine to run the job on. The machine can be either a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#github-hosted-runners\"\n  }, \"GitHub-hosted runner\"), \", or a self-hosted runner.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"runs-on: ubuntu-latest\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"steps\"), \": A job contains a sequence of tasks called steps.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Steps can run commands, run setup tasks, or run an action in your repository, a public repository, or an action published in a Docker registry.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not all steps run actions, but all actions run as a step.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Run unlimited number of steps as long as you are within the workflow usage limits\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"steps:\\n  - name: My first step\\n    if: ${{ github.event_name == 'pull_request' && github.event.action == 'unassigned' }}\\n    run: echo This event is a pull request that had an assignee removed.\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"uses\"), \": Selects an action to run as part of a step in your job.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An action is a reusable unit of code.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You can use an action defined in the same repository as the workflow, a public repository, or in a published Docker container image.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"steps:\\n  - name: My first step\\n    # Uses the master branch of a public repository\\n    uses: actions/heroku@master\\n  - name: My second step\\n    # Uses a specific version tag of a public repository\\n    uses: actions/aws@v2.0.1\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"with\"), \": A map of the input parameters defined by the action.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Each input parameter is a key/value pair.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Input parameters are set as environment variables.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The variable is prefixed with INPUT and converted to upper case.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"jobs:\\n  my_first_job:\\n    steps:\\n      - name: My first step\\n        uses: actions/hello_world@master\\n        with:\\n          first_name: Mona\\n          middle_name: The\\n          last_name: Octocat\\n\")), mdx(\"h2\", {\n    \"id\": \"test-github-actions-locally\"\n  }, \"Test GitHub Actions locally\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/nektos/act\"\n  }, \"act\")), mdx(\"p\", null, \"When you run act it reads in your GitHub Actions from .github/workflows/ and determines the set of actions that need to be run. It uses the Docker API to either pull or build the necessary images, as defined in your workflow files and finally determines the execution path based on the dependencies that were defined. Once it has the execution path, it then uses the Docker API to run containers for each action based on the images prepared earlier. The environment variables and filesystem are all configured to match what GitHub provides.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"brew install act\\n\\n# list all workflows\\nact -l\\n\\n# dry run the specific workflow, check syntax errors\\nact -j build -n\\n\\nact --secret-file act.secrets\\n\\nact -r -j pr_log -P ubuntu-latest=catthehacker/ubuntu:act-latest\\n\")), mdx(\"h2\", {\n    \"id\": \"debug-a-github-actions-secrets\"\n  }, \"Debug a Github Actions' secrets\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"echo ${{secrets.YOUR_SECRET }} | sed 's/./& /g'\\n\")), mdx(\"img\", {\n    \"src\": \"https://zellwk.com/images/2021/debug-github-actions-secret/separate-characters.png\",\n    \"alt\": null\n  }), mdx(\"p\", null, \"This would output the secret with spaces between each character, Github will not recognize the secret and will not hide it.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"! Beware that the secret will then be in the actions logs in clear form, and everybody having access to the repo will be able to see it.\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sed\"), \" is a stream editor, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"s\"), \": substitution, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".\"), \": match anything which is greedy, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/g\"), \": global replacement\")), mdx(\"h2\", {\n    \"id\": \"example\"\n  }, \"Example\"), mdx(\"h3\", {\n    \"id\": \"deploy-your-projects-to-github-pages\"\n  }, \"Deploy your projects to Github Pages\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"name: \\uD83D\\uDE80 Build and Deploy\\n\\non:\\n  push:\\n    branches:\\n      - master\\n\\nbuild-and-deploy:\\n  runs-on: ubuntu-latest\\n  steps:\\n    - name: Checkout \\uD83D\\uDECE\\uFE0F\\n      uses: actions/checkout@v2 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.\\n      with:\\n        persist-credentials: false\\n        # fetch-depth: '0' # fetch the entire git history:\\n\\n    - name: Install and Build \\uD83D\\uDD27 # This example project is built using npm and outputs the result to the 'build' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.\\n      run: |\\n        yarn install\\n        yarn run build\\n\\n    - name: Deploy \\uD83D\\uDE80\\n      uses: JamesIves/github-pages-deploy-action@releases/v3\\n      with:\\n        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\\n        BRANCH: gh-pages # The branch the action should deploy to.\\n        FOLDER: build # The folder the action should deploy.\\n\")), mdx(\"h3\", {\n    \"id\": \"outputs\"\n  }, \"outputs\"), mdx(\"p\", null, \"GitHub Actions now allows you to take step outputs and output them into other jobs. Now if you have a job that is dependent on some data from another job, instead of needing to save it in a file and upload an Artifact, you can just use Job Outputs and save just the data itself with minimal encoding:\"), mdx(\"p\", null, \"Step outputs\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-YAML\"\n  }, \"on:\\n  push:\\n    branch:\\n      - '*'\\njobs:\\n  test_strings:\\n    name: test strings\\n    runs-on: ubuntu-latest\\n    steps:\\n      - name: create string\\n        run: |\\n          MY_STRING=\\\"hello world\\\"\\n          echo \\\"::set-output name=content::$MY_STRING\\\"\\n        id: my_string\\n      - name: display string\\n        run: |\\n          echo \\\"The string is: ${{ steps.my_string.outputs.content }}\\\"\\n\")), mdx(\"p\", null, \"Job Outputs\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-YAML\"\n  }, \"name: Do things\\non: push\\njobs:\\n  job1:\\n    runs-on: ubuntu-latest\\n    outputs:\\n      url: ${{ steps.step1.outputs.url }} # map step output to job output\\n    steps:\\n      - id: step1\\n        name: send url to other job\\n        run: echo \\\"::set-output name=url::https://google.com\\\"\\n  job2:\\n    runs-on: ubuntu-latest\\n    needs: job1\\n    steps:\\n      - run: user/some-action@v1\\n        with:\\n          url: ${{ needs.job1.outputs.url }} # grab job output here\\n\")), mdx(\"h2\", {\n    \"id\": \"action-composition\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"https://docs.github.com/en/actions/creating-actions/creating-a-composite-action\"\n  }, \"Action composition\")), mdx(\"p\", null, \"Reference other actions to reduce duplication in your workflows.\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://wallis.dev/blog/composite-github-actions\"\n  }, \"Using Composite GitHub Actions to make your Workflows smaller and more reusable\")), mdx(\"h2\", {\n    \"id\": \"useful-github-actions\"\n  }, \"Useful Github Actions\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/marketplace/actions/keepalive-workflow\"\n  }, \"Keepalive Workflow\"), \":GitHub action to prevent GitHub from suspending your cronjob based triggers due to repository inactivity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/JamesIves/github-pages-deploy-action\"\n  }, \"GitHub Pages Deploy Action\"), \":This GitHub Action will automatically deploy your project to GitHub Pages. It can be configured to push your production-ready code into any branch you'd like, including gh-pages and docs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/marketplace/actions/aws-cli-install-action\"\n  }, \"AWS cli install action\"), \":Action to install the most recent version of the AWS-CLI\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/marketplace/actions/hashicorp-setup-terraform\"\n  }, \"HashiCorp - Setup Terraform\"), \":The hashicorp/setup-terraform action is a JavaScript action that sets up Terraform CLI in your GitHub Actions workflow.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/fastai/fastpages\"\n  }, \"fastpages\"), \":An easy to use blogging platform, with support for Jupyter notebooks, Word docs, and Markdown.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/marketplace/actions/release-drafter\"\n  }, \"Release Drafter\"), \":Drafts your next release notes as pull requests are merged into master.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/actions/cache\"\n  }, \"cache\"), \":Cache dependencies and build outputs in GitHub Actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/shufo/auto-assign-reviewer-by-issuer\"\n  }, \"Auto Assign Reviewer By Issuer\"), \":A GitHub Action to automatically assigns reviewer by issuer\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/srvaroa/labeler\"\n  }, \"Condition based Pull Request Labeler\"), \":Implements a GitHub Action that labels Pull Requests based on configurable conditions.It is inspired by the example Pull Request Labeller, but intends to provide a richer set of options.\")), mdx(\"h2\", {\n    \"id\": \"references\"\n  }, \"References\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://help.github.com/en/actions\"\n  }, \"GitHub Actions Documentation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://dev.to/nobleobioma/deploy-node-js-to-aws-lambda-using-github-actions-5a82\"\n  }, \"Deploy to AWS Lambda using Github Actions\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Github Actions","tags":["git","github"],"emoji":"üìù","link":null,"modified":"May 3, 2021","modifiedTimestamp":"2021-05-03T21:46:56.000Z"},"references":[],"fields":{"slug":"/github-actions"},"tableOfContents":{"items":[{"url":"#what-are-github-actions","title":"What Are GitHub Actions?"},{"url":"#workflow-syntax-for-github-actions","title":"Workflow syntax for GitHub Actions"},{"url":"#test-github-actions-locally","title":"Test GitHub Actions locally"},{"url":"#debug-a-github-actions-secrets","title":"Debug a Github Actions' secrets"},{"url":"#example","title":"Example","items":[{"url":"#deploy-your-projects-to-github-pages","title":"Deploy your projects to Github Pages"},{"url":"#outputs","title":"outputs"}]},{"url":"#action-composition","title":"Action composition"},{"url":"#useful-github-actions","title":"Useful Github Actions"},{"url":"#references","title":"References"}]},"parent":{"relativePath":"github-actions.md"}}},"pageContext":{"id":"6333c45f-4aa6-5ea7-8783-cc32af2c1d5e","previous":{"id":"49dbe4d1-1c40-5647-99e0-cbf6cb96fe2b","frontmatter":{"title":"Github Tips","tags":["github","git","shell","cli"]},"fields":{"slug":"/github"}},"next":{"id":"35918ab3-cdd4-5db8-a126-7407cf4c5a5b","frontmatter":{"title":"Sync Your Fork with the Original Git Repository","tags":["git","github"]},"fields":{"slug":"/git_fork_sync"}},"hasUntagged":true,"basePath":"/","tags":[{"tag":"Archived","totalCount":3,"slug":"/archived","path":"/tag/archived"},{"tag":"Ethereum","totalCount":3,"slug":"/ethereum","path":"/tag/ethereum"},{"tag":"NFT","totalCount":1,"slug":"/nft","path":"/tag/nft"},{"tag":"UI/UX","totalCount":1,"slug":"/uiux","path":"/tag/uiux"},{"tag":"academic","totalCount":2,"slug":"/academic","path":"/tag/academic"},{"tag":"ai","totalCount":4,"slug":"/ai","path":"/tag/ai"},{"tag":"algorithm","totalCount":13,"slug":"/algorithm","path":"/tag/algorithm"},{"tag":"analysis","totalCount":3,"slug":"/analysis","path":"/tag/analysis"},{"tag":"api","totalCount":5,"slug":"/api","path":"/tag/api"},{"tag":"apollo","totalCount":1,"slug":"/apollo","path":"/tag/apollo"},{"tag":"architecture","totalCount":2,"slug":"/architecture","path":"/tag/architecture"},{"tag":"asciidoc","totalCount":3,"slug":"/asciidoc","path":"/tag/asciidoc"},{"tag":"audio","totalCount":1,"slug":"/audio","path":"/tag/audio"},{"tag":"automation","totalCount":1,"slug":"/automation","path":"/tag/automation"},{"tag":"aws","totalCount":9,"slug":"/aws","path":"/tag/aws"},{"tag":"bash","totalCount":2,"slug":"/bash","path":"/tag/bash"},{"tag":"basketball","totalCount":2,"slug":"/basketball","path":"/tag/basketball"},{"tag":"best-practices","totalCount":3,"slug":"/best-practices","path":"/tag/best-practices"},{"tag":"big data","totalCount":3,"slug":"/big-data","path":"/tag/big-data"},{"tag":"blockchain","totalCount":15,"slug":"/blockchain","path":"/tag/blockchain"},{"tag":"book","totalCount":2,"slug":"/book","path":"/tag/book"},{"tag":"bst","totalCount":1,"slug":"/bst","path":"/tag/bst"},{"tag":"career","totalCount":2,"slug":"/career","path":"/tag/career"},{"tag":"cell","totalCount":1,"slug":"/cell","path":"/tag/cell"},{"tag":"chart","totalCount":1,"slug":"/chart","path":"/tag/chart"},{"tag":"cheatsheet","totalCount":2,"slug":"/cheatsheet","path":"/tag/cheatsheet"},{"tag":"chrome","totalCount":1,"slug":"/chrome","path":"/tag/chrome"},{"tag":"cli","totalCount":11,"slug":"/cli","path":"/tag/cli"},{"tag":"cloud","totalCount":1,"slug":"/cloud","path":"/tag/cloud"},{"tag":"code review","totalCount":1,"slug":"/code-review","path":"/tag/code-review"},{"tag":"code-review","totalCount":1,"slug":"/code-review","path":"/tag/code-review"},{"tag":"communication","totalCount":4,"slug":"/communication","path":"/tag/communication"},{"tag":"contact tracking","totalCount":1,"slug":"/contact-tracking","path":"/tag/contact-tracking"},{"tag":"container","totalCount":1,"slug":"/container","path":"/tag/container"},{"tag":"converter","totalCount":1,"slug":"/converter","path":"/tag/converter"},{"tag":"covid19","totalCount":1,"slug":"/covid19","path":"/tag/covid19"},{"tag":"crypto","totalCount":1,"slug":"/crypto","path":"/tag/crypto"},{"tag":"cryptography","totalCount":1,"slug":"/cryptography","path":"/tag/cryptography"},{"tag":"csv","totalCount":1,"slug":"/csv","path":"/tag/csv"},{"tag":"data","totalCount":1,"slug":"/data","path":"/tag/data"},{"tag":"data science","totalCount":1,"slug":"/data-science","path":"/tag/data-science"},{"tag":"database","totalCount":11,"slug":"/database","path":"/tag/database"},{"tag":"design","totalCount":3,"slug":"/design","path":"/tag/design"},{"tag":"dev","totalCount":1,"slug":"/dev","path":"/tag/dev"},{"tag":"develop","totalCount":1,"slug":"/develop","path":"/tag/develop"},{"tag":"development","totalCount":1,"slug":"/development","path":"/tag/development"},{"tag":"devops","totalCount":1,"slug":"/devops","path":"/tag/devops"},{"tag":"discipline","totalCount":1,"slug":"/discipline","path":"/tag/discipline"},{"tag":"distributed","totalCount":1,"slug":"/distributed","path":"/tag/distributed"},{"tag":"docker","totalCount":5,"slug":"/docker","path":"/tag/docker"},{"tag":"docx","totalCount":1,"slug":"/docx","path":"/tag/docx"},{"tag":"dog","totalCount":1,"slug":"/dog","path":"/tag/dog"},{"tag":"duckdb","totalCount":1,"slug":"/duckdb","path":"/tag/duckdb"},{"tag":"dynamodb","totalCount":2,"slug":"/dynamodb","path":"/tag/dynamodb"},{"tag":"edr","totalCount":1,"slug":"/edr","path":"/tag/edr"},{"tag":"education","totalCount":1,"slug":"/education","path":"/tag/education"},{"tag":"efficiency","totalCount":1,"slug":"/efficiency","path":"/tag/efficiency"},{"tag":"emergency","totalCount":1,"slug":"/emergency","path":"/tag/emergency"},{"tag":"engineering","totalCount":1,"slug":"/engineering","path":"/tag/engineering"},{"tag":"error-handling","totalCount":1,"slug":"/error-handling","path":"/tag/error-handling"},{"tag":"eslint","totalCount":1,"slug":"/eslint","path":"/tag/eslint"},{"tag":"ethereum","totalCount":2,"slug":"/ethereum","path":"/tag/ethereum"},{"tag":"experience","totalCount":1,"slug":"/experience","path":"/tag/experience"},{"tag":"functional","totalCount":1,"slug":"/functional","path":"/tag/functional"},{"tag":"game","totalCount":1,"slug":"/game","path":"/tag/game"},{"tag":"gis","totalCount":27,"slug":"/gis","path":"/tag/gis"},{"tag":"git","totalCount":5,"slug":"/git","path":"/tag/git"},{"tag":"github","totalCount":4,"slug":"/github","path":"/tag/github"},{"tag":"google","totalCount":3,"slug":"/google","path":"/tag/google"},{"tag":"graphql","totalCount":4,"slug":"/graphql","path":"/tag/graphql"},{"tag":"handbook","totalCount":1,"slug":"/handbook","path":"/tag/handbook"},{"tag":"hash","totalCount":1,"slug":"/hash","path":"/tag/hash"},{"tag":"hci","totalCount":1,"slug":"/hci","path":"/tag/hci"},{"tag":"health","totalCount":1,"slug":"/health","path":"/tag/health"},{"tag":"image","totalCount":1,"slug":"/image","path":"/tag/image"},{"tag":"immunotherapies","totalCount":1,"slug":"/immunotherapies","path":"/tag/immunotherapies"},{"tag":"infrastructure","totalCount":1,"slug":"/infrastructure","path":"/tag/infrastructure"},{"tag":"insights","totalCount":1,"slug":"/insights","path":"/tag/insights"},{"tag":"interface","totalCount":1,"slug":"/interface","path":"/tag/interface"},{"tag":"interoperability","totalCount":2,"slug":"/interoperability","path":"/tag/interoperability"},{"tag":"interview","totalCount":3,"slug":"/interview","path":"/tag/interview"},{"tag":"investment","totalCount":1,"slug":"/investment","path":"/tag/investment"},{"tag":"iot","totalCount":12,"slug":"/iot","path":"/tag/iot"},{"tag":"javascript","totalCount":19,"slug":"/javascript","path":"/tag/javascript"},{"tag":"js","totalCount":13,"slug":"/js","path":"/tag/js"},{"tag":"json","totalCount":1,"slug":"/json","path":"/tag/json"},{"tag":"jupyter","totalCount":2,"slug":"/jupyter","path":"/tag/jupyter"},{"tag":"kubernetes","totalCount":1,"slug":"/kubernetes","path":"/tag/kubernetes"},{"tag":"laws","totalCount":1,"slug":"/laws","path":"/tag/laws"},{"tag":"leadership","totalCount":1,"slug":"/leadership","path":"/tag/leadership"},{"tag":"leetcode","totalCount":8,"slug":"/leetcode","path":"/tag/leetcode"},{"tag":"life","totalCount":1,"slug":"/life","path":"/tag/life"},{"tag":"linear algebra","totalCount":1,"slug":"/linear-algebra","path":"/tag/linear-algebra"},{"tag":"linux","totalCount":1,"slug":"/linux","path":"/tag/linux"},{"tag":"log","totalCount":1,"slug":"/log","path":"/tag/log"},{"tag":"luxon","totalCount":1,"slug":"/luxon","path":"/tag/luxon"},{"tag":"machine learning","totalCount":2,"slug":"/machine-learning","path":"/tag/machine-learning"},{"tag":"macos","totalCount":5,"slug":"/macos","path":"/tag/macos"},{"tag":"management","totalCount":193,"slug":"/management","path":"/tag/management"},{"tag":"mapbox","totalCount":1,"slug":"/mapbox","path":"/tag/mapbox"},{"tag":"markdown","totalCount":1,"slug":"/markdown","path":"/tag/markdown"},{"tag":"math","totalCount":1,"slug":"/math","path":"/tag/math"},{"tag":"methodology","totalCount":1,"slug":"/methodology","path":"/tag/methodology"},{"tag":"microservices","totalCount":2,"slug":"/microservices","path":"/tag/microservices"},{"tag":"mobile","totalCount":1,"slug":"/mobile","path":"/tag/mobile"},{"tag":"models","totalCount":1,"slug":"/models","path":"/tag/models"},{"tag":"moment","totalCount":1,"slug":"/moment","path":"/tag/moment"},{"tag":"mqtt","totalCount":2,"slug":"/mqtt","path":"/tag/mqtt"},{"tag":"negotiation","totalCount":1,"slug":"/negotiation","path":"/tag/negotiation"},{"tag":"node","totalCount":5,"slug":"/node","path":"/tag/node"},{"tag":"nodejs","totalCount":3,"slug":"/nodejs","path":"/tag/nodejs"},{"tag":"note","totalCount":23,"slug":"/note","path":"/tag/note"},{"tag":"npm","totalCount":1,"slug":"/npm","path":"/tag/npm"},{"tag":"oauth","totalCount":1,"slug":"/oauth","path":"/tag/oauth"},{"tag":"object detection","totalCount":2,"slug":"/object-detection","path":"/tag/object-detection"},{"tag":"odata","totalCount":1,"slug":"/odata","path":"/tag/odata"},{"tag":"ogc","totalCount":9,"slug":"/ogc","path":"/tag/ogc"},{"tag":"openapi","totalCount":1,"slug":"/openapi","path":"/tag/openapi"},{"tag":"operators","totalCount":1,"slug":"/operators","path":"/tag/operators"},{"tag":"orchestrator","totalCount":1,"slug":"/orchestrator","path":"/tag/orchestrator"},{"tag":"pandoc","totalCount":2,"slug":"/pandoc","path":"/tag/pandoc"},{"tag":"parent","totalCount":1,"slug":"/parent","path":"/tag/parent"},{"tag":"patterns","totalCount":1,"slug":"/patterns","path":"/tag/patterns"},{"tag":"performance","totalCount":2,"slug":"/performance","path":"/tag/performance"},{"tag":"personal-growth","totalCount":82,"slug":"/personal-growth","path":"/tag/personal-growth"},{"tag":"pet","totalCount":1,"slug":"/pet","path":"/tag/pet"},{"tag":"philosophy","totalCount":1,"slug":"/philosophy","path":"/tag/philosophy"},{"tag":"pipeline","totalCount":1,"slug":"/pipeline","path":"/tag/pipeline"},{"tag":"pipenv","totalCount":1,"slug":"/pipenv","path":"/tag/pipenv"},{"tag":"pm2","totalCount":1,"slug":"/pm2","path":"/tag/pm2"},{"tag":"point free","totalCount":1,"slug":"/point-free","path":"/tag/point-free"},{"tag":"postgresql","totalCount":3,"slug":"/postgresql","path":"/tag/postgresql"},{"tag":"presentation","totalCount":2,"slug":"/presentation","path":"/tag/presentation"},{"tag":"principles","totalCount":1,"slug":"/principles","path":"/tag/principles"},{"tag":"privacy","totalCount":1,"slug":"/privacy","path":"/tag/privacy"},{"tag":"problem solving","totalCount":1,"slug":"/problem-solving","path":"/tag/problem-solving"},{"tag":"program","totalCount":2,"slug":"/program","path":"/tag/program"},{"tag":"programming","totalCount":5,"slug":"/programming","path":"/tag/programming"},{"tag":"provenance","totalCount":1,"slug":"/provenance","path":"/tag/provenance"},{"tag":"psychology","totalCount":3,"slug":"/psychology","path":"/tag/psychology"},{"tag":"python","totalCount":7,"slug":"/python","path":"/tag/python"},{"tag":"react","totalCount":7,"slug":"/react","path":"/tag/react"},{"tag":"reading","totalCount":1,"slug":"/reading","path":"/tag/reading"},{"tag":"reasoning","totalCount":1,"slug":"/reasoning","path":"/tag/reasoning"},{"tag":"regex","totalCount":1,"slug":"/regex","path":"/tag/regex"},{"tag":"relationship","totalCount":1,"slug":"/relationship","path":"/tag/relationship"},{"tag":"remote","totalCount":1,"slug":"/remote","path":"/tag/remote"},{"tag":"remote-work","totalCount":1,"slug":"/remote-work","path":"/tag/remote-work"},{"tag":"research","totalCount":7,"slug":"/research","path":"/tag/research"},{"tag":"resources","totalCount":1,"slug":"/resources","path":"/tag/resources"},{"tag":"ruby","totalCount":1,"slug":"/ruby","path":"/tag/ruby"},{"tag":"rxjs","totalCount":1,"slug":"/rxjs","path":"/tag/rxjs"},{"tag":"scalable","totalCount":1,"slug":"/scalable","path":"/tag/scalable"},{"tag":"scraping","totalCount":1,"slug":"/scraping","path":"/tag/scraping"},{"tag":"security","totalCount":3,"slug":"/security","path":"/tag/security"},{"tag":"sensorThings API","totalCount":1,"slug":"/sensor-things-api","path":"/tag/sensor-things-api"},{"tag":"serverless","totalCount":1,"slug":"/serverless","path":"/tag/serverless"},{"tag":"sh","totalCount":1,"slug":"/sh","path":"/tag/sh"},{"tag":"shell","totalCount":6,"slug":"/shell","path":"/tag/shell"},{"tag":"spatial","totalCount":2,"slug":"/spatial","path":"/tag/spatial"},{"tag":"sql","totalCount":5,"slug":"/sql","path":"/tag/sql"},{"tag":"sta","totalCount":5,"slug":"/sta","path":"/tag/sta"},{"tag":"startup","totalCount":1,"slug":"/startup","path":"/tag/startup"},{"tag":"step functions","totalCount":1,"slug":"/step-functions","path":"/tag/step-functions"},{"tag":"stock","totalCount":1,"slug":"/stock","path":"/tag/stock"},{"tag":"structures","totalCount":1,"slug":"/structures","path":"/tag/structures"},{"tag":"style","totalCount":1,"slug":"/style","path":"/tag/style"},{"tag":"swe","totalCount":1,"slug":"/swe","path":"/tag/swe"},{"tag":"table","totalCount":1,"slug":"/table","path":"/tag/table"},{"tag":"team","totalCount":2,"slug":"/team","path":"/tag/team"},{"tag":"team-building","totalCount":1,"slug":"/team-building","path":"/tag/team-building"},{"tag":"terraform","totalCount":1,"slug":"/terraform","path":"/tag/terraform"},{"tag":"test","totalCount":2,"slug":"/test","path":"/tag/test"},{"tag":"theories","totalCount":1,"slug":"/theories","path":"/tag/theories"},{"tag":"thinking","totalCount":2,"slug":"/thinking","path":"/tag/thinking"},{"tag":"time","totalCount":3,"slug":"/time","path":"/tag/time"},{"tag":"tips","totalCount":2,"slug":"/tips","path":"/tag/tips"},{"tag":"tools","totalCount":4,"slug":"/tools","path":"/tag/tools"},{"tag":"tree","totalCount":3,"slug":"/tree","path":"/tag/tree"},{"tag":"typescript","totalCount":1,"slug":"/typescript","path":"/tag/typescript"},{"tag":"ubuntu","totalCount":1,"slug":"/ubuntu","path":"/tag/ubuntu"},{"tag":"ui","totalCount":2,"slug":"/ui","path":"/tag/ui"},{"tag":"unix","totalCount":1,"slug":"/unix","path":"/tag/unix"},{"tag":"vaccine","totalCount":1,"slug":"/vaccine","path":"/tag/vaccine"},{"tag":"video","totalCount":1,"slug":"/video","path":"/tag/video"},{"tag":"vscode","totalCount":1,"slug":"/vscode","path":"/tag/vscode"},{"tag":"web","totalCount":13,"slug":"/web","path":"/tag/web"},{"tag":"wine","totalCount":1,"slug":"/wine","path":"/tag/wine"},{"tag":"wkt","totalCount":1,"slug":"/wkt","path":"/tag/wkt"},{"tag":"writing","totalCount":15,"slug":"/writing","path":"/tag/writing"},{"tag":"xml","totalCount":1,"slug":"/xml","path":"/tag/xml"},{"tag":"yarn","totalCount":1,"slug":"/yarn","path":"/tag/yarn"},{"tag":"yolo","totalCount":2,"slug":"/yolo","path":"/tag/yolo"},{"tag":"zsh","totalCount":1,"slug":"/zsh","path":"/tag/zsh"}]}},
    "staticQueryHashes": ["1308211557","2744905544","467212769"]}