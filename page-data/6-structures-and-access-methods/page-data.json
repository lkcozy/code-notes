{
    "componentChunkName": "component---node-modules-gatsby-theme-code-notes-src-templates-note-js",
    "path": "/6-structures-and-access-methods",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Structures and access methods\",\n  \"emoji\": \"üåè\",\n  \"tags\": [\"structures\", \"gis\"],\n  \"link\": null,\n  \"created\": \"2021-02-08T06:32:50.000Z\",\n  \"modified\": \"2021-05-05T22:03:31.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Describe the organization of data in computer \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"storage\"), \" to facilitate \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"efficient retrieval\"), \".\"), mdx(\"h2\", {\n    \"id\": \"highlights\"\n  }, \"Highlights\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"physical file organization affects database performance\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"indexes\"), \" are needed to go beyond the limitations of physical file organization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"non-spatial indexes, like B-trees, are inadequate for storing spatial data\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the key issue in spatial indexes is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"representing two dimensional data in a one-dimensional index\"))), mdx(\"h2\", {\n    \"id\": \"general-structure-and-access-methods\"\n  }, \"General structure and access methods\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"physical data management\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"block: the atomic unit of data on a disk\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"unordered files\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"insertion is very efficient\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"linear search with time complexity O(n)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ordered files\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"slows the insertion of new records\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"support efficient binary search with time complexity of O(logn) on indexed field\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"index: is an auxiliary structure specifically designed to speed retrieval of records\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"trade space for speed\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the concept of an index to a file is similar to the index to a book\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Spatial index is a special data structure for points and rectangles that allows you to perform queries like \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"all items within this bounding box\"), \" very efficiently (e.g. hundreds of times faster than looping over all items).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"B-Trees: a self-balancing search tree\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"balanced = equal length\"), \" through modification\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"all leaves are at the same level\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"time complexity O(logn)\")))))), mdx(\"h2\", {\n    \"id\": \"from-one-to-two-dimensions\"\n  }, \"From one to two dimensions\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"spatial Queries\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"point query:retrieve all records with spatial references located at a particular point\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"range query: retrieve all records ith spatial references located within a given range (spatial ranges may be any shape, but are often rectangular)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the main problem facing multidimensional spatial data structures is that \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"data storage is essentially one-dimensional\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"tile indexes: grid-based representation, convert multidimensional to 1-dimensional\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"row\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"row-prime\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"morton: z\")))), mdx(\"h2\", {\n    \"id\": \"raster-structures\"\n  }, \"Raster structures\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"rasters provide a fixed grid for storing data\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"cells are addressed using the row and column number\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"store as arrays\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"easy to compute\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"waste space\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Quadtree: is a tree structure where every non-leaf node has \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"exactly four descendants\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Region quadtree recursively \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"subdivide non-homogeneous square\"), \" arrays of cells into four equal sized \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"quadrants\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"decomposition continues until all squares bound homogenous regions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pros: take full advantage of the spatial structure adapt to variable spatial detail\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"cons: inefficient for highly inhomogeneous rasters\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"very sensitive to changes in the embedding space (e.g., translation rotation)\")), mdx(\"h2\", {\n    \"id\": \"point-object-structure\"\n  }, \"Point object structure\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"grid structures: partition of planar region into equal sized cells- without accounting for point distribution\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"improve range query\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"partition size depends on\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"number of points\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"magnitude of average range query\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"poor performance with non-uniform point distribution\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Point quadtree:combination of grid approach with multidimensional binary search tree\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"lead to exponential increases in descendants in k dimensions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"2D tree\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"trade tree breadth for depth\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"structure depends on order of point insertion\")))), mdx(\"h2\", {\n    \"id\": \"collection-of-objects\"\n  }, \"Collection of objects\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"efficient indexes for rectangles are important because rectangles can be used to approximate bounded planar spatial objects.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"each geometric object is enclosed in its MBB\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"minimum bounding box (MBB): the smallest rectangle bounding a shape with its axes parallel to the sides\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"using MBB, some queries may be answered without retrieving the geometry of an object\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"e.g., find all objects which lie entirely within a specified region\\n\", mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"images/using%20minimum%20bouding%20boxes%20for%20a%20range%20query.png\",\n    \"alt\": null\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"R-Tree: multidimensional dynamic spatial data structure similar to the B-tree\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"leaf nodes represent actual rectangles to be indexed\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"rectangles at any level may overlap\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"good subdivisions\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"minimize the total area of containing rectangles\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"minimize the total area of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"overlap\"), \" of containing rectangles\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"overlap is critical-> point and range searches\")))), mdx(\"h2\", {\n    \"id\": \"spherical-data-structures\"\n  }, \"Spherical data structures\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"spherical tessellations provide closer approximation to surface of the Earth\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Quaternary triangular mesh(QTM) approximates the surface of the globe\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Structures and access methods","tags":["structures","gis"],"emoji":"üåè","link":null,"modified":"May 5, 2021","modifiedTimestamp":"2021-05-05T22:03:31.000Z"},"references":[],"fields":{"slug":"/6.structures_and_access_methods"},"tableOfContents":{"items":[{"url":"#highlights","title":"Highlights"},{"url":"#general-structure-and-access-methods","title":"General structure and access methods"},{"url":"#from-one-to-two-dimensions","title":"From one to two dimensions"},{"url":"#raster-structures","title":"Raster structures"},{"url":"#point-object-structure","title":"Point object structure"},{"url":"#collection-of-objects","title":"Collection of objects"},{"url":"#spherical-data-structures","title":"Spherical data structures"}]},"parent":{"relativePath":"6.structures_and_access_methods.md"}}},"pageContext":{"id":"dc8fdc93-a86c-5441-9bd4-c001ace36a96","previous":{"id":"dd02bc86-6258-58bb-9979-2f73bdbc3fe3","frontmatter":{"title":"Architectures","tags":["gis","interoperability"]},"fields":{"slug":"/7.architectures"}},"next":{"id":"ca911ea8-d55a-50a4-a7b7-e8a1941eb989","frontmatter":{"title":"Representation and algorithms","tags":["gis","algorithm"]},"fields":{"slug":"/5.representation_and_algorithms"}},"hasUntagged":true,"basePath":"/","tags":[{"tag":"Archived","totalCount":3,"slug":"/archived","path":"/tag/archived"},{"tag":"Ethereum","totalCount":3,"slug":"/ethereum","path":"/tag/ethereum"},{"tag":"NFT","totalCount":1,"slug":"/nft","path":"/tag/nft"},{"tag":"UI/UX","totalCount":1,"slug":"/uiux","path":"/tag/uiux"},{"tag":"academic","totalCount":2,"slug":"/academic","path":"/tag/academic"},{"tag":"ai","totalCount":4,"slug":"/ai","path":"/tag/ai"},{"tag":"algorithm","totalCount":13,"slug":"/algorithm","path":"/tag/algorithm"},{"tag":"analysis","totalCount":3,"slug":"/analysis","path":"/tag/analysis"},{"tag":"api","totalCount":5,"slug":"/api","path":"/tag/api"},{"tag":"apollo","totalCount":1,"slug":"/apollo","path":"/tag/apollo"},{"tag":"architecture","totalCount":2,"slug":"/architecture","path":"/tag/architecture"},{"tag":"asciidoc","totalCount":3,"slug":"/asciidoc","path":"/tag/asciidoc"},{"tag":"audio","totalCount":1,"slug":"/audio","path":"/tag/audio"},{"tag":"automation","totalCount":1,"slug":"/automation","path":"/tag/automation"},{"tag":"aws","totalCount":9,"slug":"/aws","path":"/tag/aws"},{"tag":"bash","totalCount":2,"slug":"/bash","path":"/tag/bash"},{"tag":"basketball","totalCount":2,"slug":"/basketball","path":"/tag/basketball"},{"tag":"best-practices","totalCount":3,"slug":"/best-practices","path":"/tag/best-practices"},{"tag":"big data","totalCount":3,"slug":"/big-data","path":"/tag/big-data"},{"tag":"blockchain","totalCount":15,"slug":"/blockchain","path":"/tag/blockchain"},{"tag":"book","totalCount":2,"slug":"/book","path":"/tag/book"},{"tag":"bst","totalCount":1,"slug":"/bst","path":"/tag/bst"},{"tag":"career","totalCount":2,"slug":"/career","path":"/tag/career"},{"tag":"cell","totalCount":1,"slug":"/cell","path":"/tag/cell"},{"tag":"chart","totalCount":1,"slug":"/chart","path":"/tag/chart"},{"tag":"cheatsheet","totalCount":2,"slug":"/cheatsheet","path":"/tag/cheatsheet"},{"tag":"chrome","totalCount":1,"slug":"/chrome","path":"/tag/chrome"},{"tag":"cli","totalCount":11,"slug":"/cli","path":"/tag/cli"},{"tag":"cloud","totalCount":1,"slug":"/cloud","path":"/tag/cloud"},{"tag":"code review","totalCount":1,"slug":"/code-review","path":"/tag/code-review"},{"tag":"code-review","totalCount":1,"slug":"/code-review","path":"/tag/code-review"},{"tag":"communication","totalCount":4,"slug":"/communication","path":"/tag/communication"},{"tag":"contact tracking","totalCount":1,"slug":"/contact-tracking","path":"/tag/contact-tracking"},{"tag":"container","totalCount":1,"slug":"/container","path":"/tag/container"},{"tag":"converter","totalCount":1,"slug":"/converter","path":"/tag/converter"},{"tag":"covid19","totalCount":1,"slug":"/covid19","path":"/tag/covid19"},{"tag":"crypto","totalCount":1,"slug":"/crypto","path":"/tag/crypto"},{"tag":"cryptography","totalCount":1,"slug":"/cryptography","path":"/tag/cryptography"},{"tag":"csv","totalCount":1,"slug":"/csv","path":"/tag/csv"},{"tag":"data","totalCount":1,"slug":"/data","path":"/tag/data"},{"tag":"data science","totalCount":1,"slug":"/data-science","path":"/tag/data-science"},{"tag":"database","totalCount":11,"slug":"/database","path":"/tag/database"},{"tag":"design","totalCount":3,"slug":"/design","path":"/tag/design"},{"tag":"dev","totalCount":1,"slug":"/dev","path":"/tag/dev"},{"tag":"develop","totalCount":1,"slug":"/develop","path":"/tag/develop"},{"tag":"development","totalCount":1,"slug":"/development","path":"/tag/development"},{"tag":"devops","totalCount":1,"slug":"/devops","path":"/tag/devops"},{"tag":"discipline","totalCount":1,"slug":"/discipline","path":"/tag/discipline"},{"tag":"distributed","totalCount":1,"slug":"/distributed","path":"/tag/distributed"},{"tag":"docker","totalCount":5,"slug":"/docker","path":"/tag/docker"},{"tag":"docx","totalCount":1,"slug":"/docx","path":"/tag/docx"},{"tag":"dog","totalCount":1,"slug":"/dog","path":"/tag/dog"},{"tag":"duckdb","totalCount":1,"slug":"/duckdb","path":"/tag/duckdb"},{"tag":"dynamodb","totalCount":2,"slug":"/dynamodb","path":"/tag/dynamodb"},{"tag":"edr","totalCount":1,"slug":"/edr","path":"/tag/edr"},{"tag":"education","totalCount":1,"slug":"/education","path":"/tag/education"},{"tag":"efficiency","totalCount":1,"slug":"/efficiency","path":"/tag/efficiency"},{"tag":"emergency","totalCount":1,"slug":"/emergency","path":"/tag/emergency"},{"tag":"engineering","totalCount":1,"slug":"/engineering","path":"/tag/engineering"},{"tag":"error-handling","totalCount":1,"slug":"/error-handling","path":"/tag/error-handling"},{"tag":"eslint","totalCount":1,"slug":"/eslint","path":"/tag/eslint"},{"tag":"ethereum","totalCount":2,"slug":"/ethereum","path":"/tag/ethereum"},{"tag":"experience","totalCount":1,"slug":"/experience","path":"/tag/experience"},{"tag":"functional","totalCount":1,"slug":"/functional","path":"/tag/functional"},{"tag":"game","totalCount":1,"slug":"/game","path":"/tag/game"},{"tag":"gis","totalCount":27,"slug":"/gis","path":"/tag/gis"},{"tag":"git","totalCount":5,"slug":"/git","path":"/tag/git"},{"tag":"github","totalCount":4,"slug":"/github","path":"/tag/github"},{"tag":"google","totalCount":3,"slug":"/google","path":"/tag/google"},{"tag":"graphql","totalCount":4,"slug":"/graphql","path":"/tag/graphql"},{"tag":"handbook","totalCount":1,"slug":"/handbook","path":"/tag/handbook"},{"tag":"hash","totalCount":1,"slug":"/hash","path":"/tag/hash"},{"tag":"hci","totalCount":1,"slug":"/hci","path":"/tag/hci"},{"tag":"health","totalCount":1,"slug":"/health","path":"/tag/health"},{"tag":"image","totalCount":1,"slug":"/image","path":"/tag/image"},{"tag":"immunotherapies","totalCount":1,"slug":"/immunotherapies","path":"/tag/immunotherapies"},{"tag":"infrastructure","totalCount":1,"slug":"/infrastructure","path":"/tag/infrastructure"},{"tag":"insights","totalCount":1,"slug":"/insights","path":"/tag/insights"},{"tag":"interface","totalCount":1,"slug":"/interface","path":"/tag/interface"},{"tag":"interoperability","totalCount":2,"slug":"/interoperability","path":"/tag/interoperability"},{"tag":"interview","totalCount":3,"slug":"/interview","path":"/tag/interview"},{"tag":"investment","totalCount":1,"slug":"/investment","path":"/tag/investment"},{"tag":"iot","totalCount":12,"slug":"/iot","path":"/tag/iot"},{"tag":"javascript","totalCount":19,"slug":"/javascript","path":"/tag/javascript"},{"tag":"js","totalCount":13,"slug":"/js","path":"/tag/js"},{"tag":"json","totalCount":1,"slug":"/json","path":"/tag/json"},{"tag":"jupyter","totalCount":2,"slug":"/jupyter","path":"/tag/jupyter"},{"tag":"kubernetes","totalCount":1,"slug":"/kubernetes","path":"/tag/kubernetes"},{"tag":"laws","totalCount":1,"slug":"/laws","path":"/tag/laws"},{"tag":"leadership","totalCount":1,"slug":"/leadership","path":"/tag/leadership"},{"tag":"leetcode","totalCount":8,"slug":"/leetcode","path":"/tag/leetcode"},{"tag":"life","totalCount":1,"slug":"/life","path":"/tag/life"},{"tag":"linear algebra","totalCount":1,"slug":"/linear-algebra","path":"/tag/linear-algebra"},{"tag":"linux","totalCount":1,"slug":"/linux","path":"/tag/linux"},{"tag":"log","totalCount":1,"slug":"/log","path":"/tag/log"},{"tag":"luxon","totalCount":1,"slug":"/luxon","path":"/tag/luxon"},{"tag":"machine learning","totalCount":2,"slug":"/machine-learning","path":"/tag/machine-learning"},{"tag":"macos","totalCount":5,"slug":"/macos","path":"/tag/macos"},{"tag":"management","totalCount":193,"slug":"/management","path":"/tag/management"},{"tag":"mapbox","totalCount":1,"slug":"/mapbox","path":"/tag/mapbox"},{"tag":"markdown","totalCount":1,"slug":"/markdown","path":"/tag/markdown"},{"tag":"math","totalCount":1,"slug":"/math","path":"/tag/math"},{"tag":"methodology","totalCount":1,"slug":"/methodology","path":"/tag/methodology"},{"tag":"microservices","totalCount":2,"slug":"/microservices","path":"/tag/microservices"},{"tag":"mobile","totalCount":1,"slug":"/mobile","path":"/tag/mobile"},{"tag":"models","totalCount":1,"slug":"/models","path":"/tag/models"},{"tag":"moment","totalCount":1,"slug":"/moment","path":"/tag/moment"},{"tag":"mqtt","totalCount":2,"slug":"/mqtt","path":"/tag/mqtt"},{"tag":"negotiation","totalCount":1,"slug":"/negotiation","path":"/tag/negotiation"},{"tag":"node","totalCount":5,"slug":"/node","path":"/tag/node"},{"tag":"nodejs","totalCount":3,"slug":"/nodejs","path":"/tag/nodejs"},{"tag":"note","totalCount":23,"slug":"/note","path":"/tag/note"},{"tag":"npm","totalCount":1,"slug":"/npm","path":"/tag/npm"},{"tag":"oauth","totalCount":1,"slug":"/oauth","path":"/tag/oauth"},{"tag":"object detection","totalCount":2,"slug":"/object-detection","path":"/tag/object-detection"},{"tag":"odata","totalCount":1,"slug":"/odata","path":"/tag/odata"},{"tag":"ogc","totalCount":9,"slug":"/ogc","path":"/tag/ogc"},{"tag":"openapi","totalCount":1,"slug":"/openapi","path":"/tag/openapi"},{"tag":"operators","totalCount":1,"slug":"/operators","path":"/tag/operators"},{"tag":"orchestrator","totalCount":1,"slug":"/orchestrator","path":"/tag/orchestrator"},{"tag":"pandoc","totalCount":2,"slug":"/pandoc","path":"/tag/pandoc"},{"tag":"parent","totalCount":1,"slug":"/parent","path":"/tag/parent"},{"tag":"patterns","totalCount":1,"slug":"/patterns","path":"/tag/patterns"},{"tag":"performance","totalCount":2,"slug":"/performance","path":"/tag/performance"},{"tag":"personal-growth","totalCount":82,"slug":"/personal-growth","path":"/tag/personal-growth"},{"tag":"pet","totalCount":1,"slug":"/pet","path":"/tag/pet"},{"tag":"philosophy","totalCount":1,"slug":"/philosophy","path":"/tag/philosophy"},{"tag":"pipeline","totalCount":1,"slug":"/pipeline","path":"/tag/pipeline"},{"tag":"pipenv","totalCount":1,"slug":"/pipenv","path":"/tag/pipenv"},{"tag":"pm2","totalCount":1,"slug":"/pm2","path":"/tag/pm2"},{"tag":"point free","totalCount":1,"slug":"/point-free","path":"/tag/point-free"},{"tag":"postgresql","totalCount":3,"slug":"/postgresql","path":"/tag/postgresql"},{"tag":"presentation","totalCount":2,"slug":"/presentation","path":"/tag/presentation"},{"tag":"principles","totalCount":1,"slug":"/principles","path":"/tag/principles"},{"tag":"privacy","totalCount":1,"slug":"/privacy","path":"/tag/privacy"},{"tag":"problem solving","totalCount":1,"slug":"/problem-solving","path":"/tag/problem-solving"},{"tag":"program","totalCount":2,"slug":"/program","path":"/tag/program"},{"tag":"programming","totalCount":5,"slug":"/programming","path":"/tag/programming"},{"tag":"provenance","totalCount":1,"slug":"/provenance","path":"/tag/provenance"},{"tag":"psychology","totalCount":3,"slug":"/psychology","path":"/tag/psychology"},{"tag":"python","totalCount":7,"slug":"/python","path":"/tag/python"},{"tag":"react","totalCount":7,"slug":"/react","path":"/tag/react"},{"tag":"reading","totalCount":1,"slug":"/reading","path":"/tag/reading"},{"tag":"reasoning","totalCount":1,"slug":"/reasoning","path":"/tag/reasoning"},{"tag":"regex","totalCount":1,"slug":"/regex","path":"/tag/regex"},{"tag":"relationship","totalCount":1,"slug":"/relationship","path":"/tag/relationship"},{"tag":"remote","totalCount":1,"slug":"/remote","path":"/tag/remote"},{"tag":"remote-work","totalCount":1,"slug":"/remote-work","path":"/tag/remote-work"},{"tag":"research","totalCount":7,"slug":"/research","path":"/tag/research"},{"tag":"resources","totalCount":1,"slug":"/resources","path":"/tag/resources"},{"tag":"ruby","totalCount":1,"slug":"/ruby","path":"/tag/ruby"},{"tag":"rxjs","totalCount":1,"slug":"/rxjs","path":"/tag/rxjs"},{"tag":"scalable","totalCount":1,"slug":"/scalable","path":"/tag/scalable"},{"tag":"scraping","totalCount":1,"slug":"/scraping","path":"/tag/scraping"},{"tag":"security","totalCount":3,"slug":"/security","path":"/tag/security"},{"tag":"sensorThings API","totalCount":1,"slug":"/sensor-things-api","path":"/tag/sensor-things-api"},{"tag":"serverless","totalCount":1,"slug":"/serverless","path":"/tag/serverless"},{"tag":"sh","totalCount":1,"slug":"/sh","path":"/tag/sh"},{"tag":"shell","totalCount":6,"slug":"/shell","path":"/tag/shell"},{"tag":"spatial","totalCount":2,"slug":"/spatial","path":"/tag/spatial"},{"tag":"sql","totalCount":5,"slug":"/sql","path":"/tag/sql"},{"tag":"sta","totalCount":5,"slug":"/sta","path":"/tag/sta"},{"tag":"startup","totalCount":1,"slug":"/startup","path":"/tag/startup"},{"tag":"step functions","totalCount":1,"slug":"/step-functions","path":"/tag/step-functions"},{"tag":"stock","totalCount":1,"slug":"/stock","path":"/tag/stock"},{"tag":"structures","totalCount":1,"slug":"/structures","path":"/tag/structures"},{"tag":"style","totalCount":1,"slug":"/style","path":"/tag/style"},{"tag":"swe","totalCount":1,"slug":"/swe","path":"/tag/swe"},{"tag":"table","totalCount":1,"slug":"/table","path":"/tag/table"},{"tag":"team","totalCount":2,"slug":"/team","path":"/tag/team"},{"tag":"team-building","totalCount":1,"slug":"/team-building","path":"/tag/team-building"},{"tag":"terraform","totalCount":1,"slug":"/terraform","path":"/tag/terraform"},{"tag":"test","totalCount":2,"slug":"/test","path":"/tag/test"},{"tag":"theories","totalCount":1,"slug":"/theories","path":"/tag/theories"},{"tag":"thinking","totalCount":2,"slug":"/thinking","path":"/tag/thinking"},{"tag":"time","totalCount":3,"slug":"/time","path":"/tag/time"},{"tag":"tips","totalCount":2,"slug":"/tips","path":"/tag/tips"},{"tag":"tools","totalCount":4,"slug":"/tools","path":"/tag/tools"},{"tag":"tree","totalCount":3,"slug":"/tree","path":"/tag/tree"},{"tag":"typescript","totalCount":1,"slug":"/typescript","path":"/tag/typescript"},{"tag":"ubuntu","totalCount":1,"slug":"/ubuntu","path":"/tag/ubuntu"},{"tag":"ui","totalCount":2,"slug":"/ui","path":"/tag/ui"},{"tag":"unix","totalCount":1,"slug":"/unix","path":"/tag/unix"},{"tag":"vaccine","totalCount":1,"slug":"/vaccine","path":"/tag/vaccine"},{"tag":"video","totalCount":1,"slug":"/video","path":"/tag/video"},{"tag":"vscode","totalCount":1,"slug":"/vscode","path":"/tag/vscode"},{"tag":"web","totalCount":13,"slug":"/web","path":"/tag/web"},{"tag":"wine","totalCount":1,"slug":"/wine","path":"/tag/wine"},{"tag":"wkt","totalCount":1,"slug":"/wkt","path":"/tag/wkt"},{"tag":"writing","totalCount":15,"slug":"/writing","path":"/tag/writing"},{"tag":"xml","totalCount":1,"slug":"/xml","path":"/tag/xml"},{"tag":"yarn","totalCount":1,"slug":"/yarn","path":"/tag/yarn"},{"tag":"yolo","totalCount":2,"slug":"/yolo","path":"/tag/yolo"},{"tag":"zsh","totalCount":1,"slug":"/zsh","path":"/tag/zsh"}]}},
    "staticQueryHashes": ["1308211557","2744905544","467212769"]}